CREATE OR REPLACE PACKAGE FACT_PROCESS AS
  PROCEDURE INSERT_INTMPTBL(FKIND NUMBER,FDATE CHAR,FITEMNO NUMBER);
  PROCEDURE INSERT_EXTMPTBL(FKIND NUMBER,FDATE CHAR,FINVSRL NUMBER);
  PROCEDURE REINDEX_INFACT(FKIND NUMBER,FDATE CHAR);
  PROCEDURE REINDEX_EXFACT(FKIND NUMBER,FDATE CHAR);
  PROCEDURE FINAL_INFACTDATE(FKIND NUMBER,FDATE CHAR);
  PROCEDURE FINAL_INFACTNO(FKIND NUMBER,FFACTNO NUMBER);
  PROCEDURE FINAL_EXFACTDATE(FKIND NUMBER,FDATE CHAR);
  PROCEDURE FINAL_EXFACTNO(FKIND NUMBER,FFACTNO NUMBER);
  FUNCTION  REJFINAL_INFACT(FKIND NUMBER,FFACTNO NUMBER,FDATE CHAR) RETURN NUMBER;
  FUNCTION  REJFINAL_EXFACT(FKIND NUMBER,FFACTNO NUMBER,FDATE CHAR) RETURN NUMBER;
  PROCEDURE CANCELFINAL_INFACT(FKIND NUMBER,FLFACTNO NUMBER,FHFACTNO NUMBER,FCANCELDATE CHAR);
  PROCEDURE CANCELFINAL_EXFACT(FKIND NUMBER,FLFACTNO NUMBER,FHFACTNO NUMBER,FCANCELDATE CHAR);
  PROCEDURE INSERT_SRVTMPTBL(FPRCNO NUMBER,FDATE CHAR);
  PROCEDURE REINDEX_SRVFACT(FDATE CHAR);
  PROCEDURE FINAL_SRVFACTDATE(FDATE CHAR);
  PROCEDURE FINAL_SRVFACTNO(FPRCNO NUMBER);
  FUNCTION  REJFINAL_SRVFACT(FFACTNO NUMBER,FDATE CHAR) RETURN NUMBER;
  PROCEDURE CANCELFINAL_SRVFACT(FLFACTNO NUMBER,FHFACTNO NUMBER,FCANCELDATE CHAR);
  FUNCTION  CHECK_ATF_NO(FNO VARCHAR2) RETURN BOOLEAN;
  PROCEDURE SENDNEXTYEAR(FYEAR NUMBER);
  FUNCTION SALE_INVOCH(FRDATE VARCHAR2, TRDATE VARCHAR2, VCHNO NUMBER, VCHYEAR NUMBER) RETURN NUMBER;
  PROCEDURE SALE_RETURNVOCH(FRDATE VARCHAR2, TRDATE VARCHAR2, VCHNO NUMBER, VCHYEAR NUMBER);
  PROCEDURE BALANCEVOCH(FYEAR NUMBER);
  FUNCTION REJ_INVOCH(FRDATE VARCHAR2, VCHNO NUMBER, VCHYEAR NUMBER) RETURN NUMBER;
END FACT_PROCESS;
/


CREATE OR REPLACE PACKAGE BODY FACT_PROCESS AS

    FUNCTION FINDLASTNO(FKIND NUMBER,FDATE CHAR) RETURN NUMBER IS
      FNO NUMBER;
      BEGIN

        SELECT NVL(MAX(ITMNO),0) INTO FNO
        FROM   ITEMFACT_T
        WHERE   ITMKIND = FKIND
        AND     ITMDTE <= FDATE
        AND     ITMSTAT = 2;

        RETURN FNO;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
           RETURN 0;
         WHEN  OTHERS THEN
          RAISE;
      END FINDLASTNO;


 PROCEDURE INSERT_INTMPTBL(FKIND NUMBER,FDATE CHAR,FITEMNO NUMBER) IS

     CURSOR ITEMFACT_CUR IS
          SELECT * FROM ITEMFACT_T
          WHERE   ITMKIND = FKIND
          AND     ITMNO  >  FITEMNO
          AND     ITMDTE <= FDATE
          AND     ITMSTAT <> 2
          FOR UPDATE;

     CURSOR ITEMFACR_CUR IS
          SELECT * FROM ITEMFACR_T
          WHERE   ITMKIND = FKIND
          AND     ITMNO  IN( SELECT ITMNO FROM ITEMFACT_T
                             WHERE   ITMKIND = FKIND
                             AND     ITMNO  >  FITEMNO
                             AND     ITMDTE <= FDATE
                             AND     ITMSTAT <> 2);

     /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/
     CURSOR INFACTHVL_CUR IS
          SELECT * FROM INFACTHVL_T
          WHERE   ITMKIND = FKIND
          AND     ITMNO  IN( SELECT ITMNO FROM ITEMFACT_T
                             WHERE   ITMKIND = FKIND
                             AND     ITMNO  >  FITEMNO
                             AND     ITMDTE <= FDATE
                             AND     ITMSTAT <> 2);
     /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/
   ITEMFACT_REC ITEMFACT_CUR%ROWTYPE;
   ITEMFACR_REC ITEMFACT_CUR%ROWTYPE;
   /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/
   INFACTHVL_REC INFACTHVL_CUR%ROWTYPE;
 BEGIN
   DELETE TMP_ITEMFACR;
   DELETE TMP_INFACTHVL;
   DELETE TMP_ITEMFACT;

   FOR  ITEMFACT_REC IN ITEMFACT_CUR LOOP
    INSERT INTO TMP_ITEMFACT
      (ITMNO, ITMTYP, ITMKIND,
       ITMDTE, ITMSTAT, ITMDESC, OFNUM,
           CNTCODE, RISRL)
    VALUES
      (ITEMFACT_REC.ITMNO, ITEMFACT_REC.ITMTYP,
       ITEMFACT_REC.ITMKIND,
       ITEMFACT_REC.ITMDTE, ITEMFACT_REC.ITMSTAT,
       ITEMFACT_REC.ITMDESC, ITEMFACT_REC.OFNUM,
           ITEMFACT_REC.CNTCODE, ITEMFACT_REC.RISRL);
  END LOOP;

  FOR ITEMFACR_REC IN ITEMFACR_CUR LOOP
    INSERT INTO TMP_ITEMFACR
      (ITMNO, ITMKIND, ITMROW, GDS_CODE, CU_CODE,
           ITMQTY, ITMPRICE)
    VALUES
      (ITEMFACR_REC.ITMNO, ITEMFACR_REC.ITMKIND,
       ITEMFACR_REC.ITMROW, ITEMFACR_REC.GDS_CODE,
       ITEMFACR_REC.CU_CODE,ITEMFACR_REC.ITMQTY, ITEMFACR_REC.ITMPRICE);
  END LOOP;
  /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/
  FOR INFACTHVL_REC IN INFACTHVL_CUR LOOP
    INSERT INTO TMP_INFACTHVL
      (ITMNO, ITMKIND, ITMHVLNO, ITHHVLDTE, ITMHVLYEAR)
    VALUES
      (INFACTHVL_REC.ITMNO, INFACTHVL_REC.ITMKIND,
       INFACTHVL_REC.ITMHVLNO, INFACTHVL_REC.ITHHVLDTE,
       INFACTHVL_REC.ITMHVLYEAR);
  END LOOP;
  /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/

 END INSERT_INTMPTBL;

 PROCEDURE REINDEX_INFACT(FKIND NUMBER,FDATE CHAR) IS

   CURSOR FACT_CUR IS
     SELECT * FROM TMP_ITEMFACT
     ORDER BY ITMDTE,ITMNO;

   CURSOR FACR_CUR(FKIND NUMBER,FITEMNO NUMBER) IS
     SELECT * FROM  TMP_ITEMFACR
     WHERE   ITMKIND = FKIND
     AND     ITMNO   =  FITEMNO;

   CURSOR INFACTHVL_CUR(FKIND NUMBER,FITEMNO NUMBER) IS
     SELECT * FROM  TMP_INFACTHVL
     WHERE   ITMKIND = FKIND
     AND     ITMNO   =  FITEMNO;

   FACT_REC  FACT_CUR%ROWTYPE;
   FACR_REC  FACR_CUR%ROWTYPE;
   INFACTHVL_REC INFACTHVL_CUR%ROWTYPE;
   FSEQ NUMBER(6);
 BEGIN
--    SET TRANSACTION READ WRITE;
      FSEQ := FINDLASTNO(FKIND,FDATE);
      INSERT_INTMPTBL(FKIND,FDATE,FSEQ);
      FOR FACT_REC IN FACT_CUR LOOP
         DELETE FROM  INFACTHVL_T
         WHERE   ITMKIND = FACT_REC.ITMKIND
         AND     ITMNO   = FACT_REC.ITMNO;

         DELETE FROM  ITEMFACR_T
         WHERE   ITMKIND = FACT_REC.ITMKIND
         AND     ITMNO   = FACT_REC.ITMNO;

         DELETE FROM  ITEMFACT_T
         WHERE   ITMKIND = FACT_REC.ITMKIND
         AND     ITMNO   = FACT_REC.ITMNO;

      END LOOP;
      FSEQ := FSEQ + 1 ;
      FOR FACT_REC IN FACT_CUR LOOP
         INSERT INTO  ITEMFACT_T
           (ITMNO, ITMTYP, ITMKIND,
            ITMDTE, ITMSTAT, ITMDESC, OFNUM,
                CNTCODE, RISRL)
         VALUES
           (FSEQ, FACT_REC.ITMTYP, FACT_REC.ITMKIND,
            FACT_REC.ITMDTE,
            FACT_REC.ITMSTAT, FACT_REC.ITMDESC,
            FACT_REC.OFNUM, FACT_REC.CNTCODE, FACT_REC.RISRL);

         FOR FACR_REC IN FACR_CUR(FACT_REC.ITMKIND,FACT_REC.ITMNO) LOOP
            INSERT INTO ITEMFACR_T
              (ITMNO,  ITMKIND,
               ITMROW, GDS_CODE, CU_CODE,
                   ITMQTY, ITMPRICE)
            VALUES
              (FSEQ,FACR_REC.ITMKIND,
               FACR_REC.ITMROW, FACR_REC.GDS_CODE, FACR_REC.CU_CODE,
                   FACR_REC.ITMQTY, FACR_REC.ITMPRICE);
         END LOOP;
         /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/
         FOR INFACTHVL_REC IN INFACTHVL_CUR(FACT_REC.ITMKIND,FACT_REC.ITMNO) LOOP
            INSERT INTO INFACTHVL_T
              (ITMNO, ITMKIND, ITMHVLNO, ITHHVLDTE, ITMHVLYEAR)
            VALUES
              (FSEQ,INFACTHVL_REC.ITMKIND,
               INFACTHVL_REC.ITMHVLNO, INFACTHVL_REC.ITHHVLDTE, INFACTHVL_REC.ITMHVLYEAR);
         END LOOP;

         UPDATE VALIDITY_T SET ADNUM3 = FSEQ
         WHERE  ADNUM3 = FACT_REC.ITMNO;
         /*********************ADD BY MARYAM ESKANDARI IN 840615**************************/
         FSEQ := FSEQ + 1;
      END LOOP;
--      COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
--      ROLLBACK;
      RAISE;
 END REINDEX_INFACT;

 FUNCTION FINDLASTINVNO(FKIND NUMBER,FDATE CHAR) RETURN NUMBER IS
  FNO NUMBER;
  BEGIN

    SELECT NVL(MAX(INVSRL),0) INTO FNO
    FROM   INVOICEPRDT_T
    WHERE   INVKIND = FKIND
    AND     INVDTE <= FDATE
    AND     INVSTAT = 2;
    RETURN FNO;
  EXCEPTION
     WHEN NO_DATA_FOUND THEN
       RETURN 0;
     WHEN  OTHERS THEN
      RAISE;
  END FINDLASTINVNO;



  PROCEDURE INSERT_EXTMPTBL(FKIND NUMBER,FDATE CHAR,FINVSRL NUMBER) IS

     CURSOR INVOICEPRDT_CUR IS
          SELECT * FROM INVOICEPRDT_T
          WHERE   INVKIND = FKIND
          AND     INVSRL  >  FINVSRL
          AND     INVDTE <= FDATE
          AND     INVSTAT <> 2
          FOR UPDATE;

     CURSOR INVOICEPRDR_CUR IS
          SELECT * FROM INVOICEPRDR_T
          WHERE   INVKIND = FKIND
          AND     INVSRL  IN( SELECT INVSRL FROM INVOICEPRDT_T
                              WHERE   INVKIND = FKIND
                              AND     INVSRL  >  FINVSRL
                              AND     INVDTE <= FDATE
                              AND     INVSTAT <> 2);


   INVOICEPRDT_REC INVOICEPRDT_CUR%ROWTYPE;
   INVOICEPRDR_REC INVOICEPRDR_CUR%ROWTYPE;
 BEGIN
   FOR  INVOICEPRDT_REC IN INVOICEPRDT_CUR LOOP
      INSERT INTO TMP_INVOICEPRDT
       (INVSRL, INVKIND, INVNUM, INVDTE, CNTCODE, RISRL, ORDNO,
        INVDESC, INVLCNO, INVSHPMNT, INVZONE, INVSTAT, INTMGOODS)
      VALUES
       (INVOICEPRDT_REC.INVSRL, INVOICEPRDT_REC.INVKIND,
        INVOICEPRDT_REC.INVNUM, INVOICEPRDT_REC.INVDTE, INVOICEPRDT_REC.CNTCODE,
        INVOICEPRDT_REC.RISRL, INVOICEPRDT_REC.ORDNO,
        INVOICEPRDT_REC.INVDESC, INVOICEPRDT_REC.INVLCNO,
        INVOICEPRDT_REC.INVSHPMNT, INVOICEPRDT_REC.INVZONE,
        INVOICEPRDT_REC.INVSTAT, INVOICEPRDT_REC.INTMGOODS);
  END LOOP;

  FOR  INVOICEPRDR_REC IN INVOICEPRDR_CUR LOOP
     INSERT INTO TMP_INVOICEPRDR
     (INVSRL, INVKIND, INVROW,
      GDS_CODE, CU_CODE, INVQTY,INVPRICE)
     VALUES
     (INVOICEPRDR_REC.INVSRL, INVOICEPRDR_REC.INVKIND,
      INVOICEPRDR_REC.INVROW,
      INVOICEPRDR_REC.GDS_CODE, INVOICEPRDR_REC.CU_CODE,
      INVOICEPRDR_REC.INVQTY,INVOICEPRDR_REC.INVPRICE);
  END LOOP;

  END INSERT_EXTMPTBL;

PROCEDURE REINDEX_EXFACT(FKIND NUMBER,FDATE CHAR) IS

   CURSOR FACT_CUR IS
     SELECT * FROM TMP_INVOICEPRDT
     ORDER BY INVDTE,INVSRL;

   CURSOR FACR_CUR(FKIND NUMBER,FINVSRL NUMBER) IS
     SELECT * FROM  TMP_INVOICEPRDR
     WHERE   INVKIND = FKIND
     AND     INVSRL  = FINVSRL;

   FACT_REC  FACT_CUR%ROWTYPE;
   FACR_REC  FACR_CUR%ROWTYPE;
   FSEQ NUMBER(6);
 BEGIN
--    SET TRANSACTION READ WRITE;
      FSEQ := FINDLASTINVNO(FKIND,FDATE) ;
      INSERT_EXTMPTBL(FKIND,FDATE,FSEQ);
      FOR FACT_REC IN FACT_CUR LOOP
         DELETE FROM  INVOICEPRDR_T
         WHERE   INVKIND = FACT_REC.INVKIND
         AND     INVSRL  = FACT_REC.INVSRL;

         DELETE FROM  INVOICEPRDT_T
         WHERE   INVKIND = FACT_REC.INVKIND
         AND     INVSRL  = FACT_REC.INVSRL;

      END LOOP;
      FSEQ := FSEQ + 1;
      FOR FACT_REC IN FACT_CUR LOOP
         INSERT INTO  INVOICEPRDT_T
         (INVSRL, INVKIND, INVNUM, INVDTE, CNTCODE, RISRL, ORDNO,
              INVDESC, INVLCNO, INVSHPMNT, INVZONE, INVSTAT, INTMGOODS)
         VALUES
         (FSEQ, FACT_REC.INVKIND, FACT_REC.INVNUM, FACT_REC.INVDTE,
          FACT_REC.CNTCODE, FACT_REC.RISRL, FACT_REC.ORDNO,
              FACT_REC.INVDESC, FACT_REC.INVLCNO, FACT_REC.INVSHPMNT, FACT_REC.INVZONE,
          FACT_REC.INVSTAT, FACT_REC.INTMGOODS);

       FOR FACR_REC IN FACR_CUR(FACT_REC.INVKIND,FACT_REC.INVSRL) LOOP
          INSERT INTO INVOICEPRDR_T
          (INVSRL, INVKIND, INVROW, GDS_CODE, CU_CODE, INVQTY,
           INVPRICE)
          VALUES
          (FSEQ, FACR_REC.INVKIND, FACR_REC.INVROW, FACR_REC.GDS_CODE,
           FACR_REC.CU_CODE, FACR_REC.INVQTY,FACR_REC.INVPRICE);
       END LOOP;
       FSEQ := FSEQ + 1;
      END LOOP;
--      COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
--      ROLLBACK;
      RAISE;

END REINDEX_EXFACT;

PROCEDURE FINAL_INFACTDATE(FKIND NUMBER,FDATE CHAR) IS

  FLASTFINAL_NO NUMBER(6);
  FCOUNT  NUMBER;
  FMAXNO  NUMBER;
BEGIN
--  SET TRANSACTION READ WRITE;
  FLASTFINAL_NO := FINDLASTNO(FKIND,FDATE);


  SELECT COUNT(ITMNO) INTO FCOUNT
  FROM   ITEMFACT_T
  WHERE   ITMKIND = FKIND
  AND     ITMNO   > FLASTFINAL_NO
  AND     ITMDTE <= FDATE;

  SELECT NVL(MAX(ITMNO),0) INTO FMAXNO
  FROM   ITEMFACT_T
  WHERE   ITMKIND = FKIND
  AND     ITMNO   > FLASTFINAL_NO
  AND     ITMDTE <= FDATE;
/*
  IF FMAXNO <> (FCOUNT+FLASTFINAL_NO) THEN
   REINDEX_INFACT(FKIND,FDATE);
  END IF;
*/
  UPDATE  ITEMFACT_T
  SET     ITMSTAT = 2
  WHERE   ITMKIND = FKIND
  AND     ITMNO   > FLASTFINAL_NO
  AND     ITMDTE <= FDATE;

  COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END FINAL_INFACTDATE;

PROCEDURE FINAL_INFACTNO(FKIND NUMBER,FFACTNO NUMBER) IS
  FLASTFINAL_NO NUMBER(6);
  FCOUNT  NUMBER;
  FDATE  NUMBER;
BEGIN
--   SET TRANSACTION READ WRITE;

   SELECT NVL(MAX(ITMNO),0) INTO FLASTFINAL_NO
   FROM    ITEMFACT_T
   WHERE   ITMKIND = FKIND
   AND     ITMNO  <= FFACTNO
   AND     ITMSTAT = 2;


  SELECT COUNT(ITMNO) INTO FCOUNT
  FROM   ITEMFACT_T
  WHERE   ITMKIND = FKIND
  AND     ITMNO   > FLASTFINAL_NO
  AND     ITMNO  <= FFACTNO;


  SELECT  ITMDTE INTO FDATE
  FROM    ITEMFACT_T
  WHERE   ITMKIND = FKIND
  AND     ITMNO   = FFACTNO;
/*
  IF FFACTNO <> (FCOUNT+FLASTFINAL_NO) THEN
    REINDEX_INFACT(FKIND,FDATE);
  END IF;
*/
  UPDATE  ITEMFACT_T
  SET     ITMSTAT = 2
  WHERE   ITMKIND = FKIND
  AND     ITMNO   > FLASTFINAL_NO
  AND     ITMNO  <= FFACTNO;
  COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;

END FINAL_INFACTNO;

PROCEDURE FINAL_EXFACTDATE(FKIND NUMBER,FDATE CHAR)IS
  FMAXNO NUMBER;
  FCOUNT NUMBER;
  FLASTINVNO NUMBER;
BEGIN
--  SET TRANSACTION READ WRITE;
  FLASTINVNO := FINDLASTINVNO(FKIND,FDATE) ;

  SELECT COUNT(INVSRL) INTO FCOUNT
  FROM   INVOICEPRDT_T
  WHERE   INVKIND = FKIND
  AND     INVSRL  > FLASTINVNO
  AND     INVDTE <= FDATE;

  SELECT NVL(MAX(INVSRL),0) INTO FMAXNO
  FROM   INVOICEPRDT_T
  WHERE   INVKIND = FKIND
  AND     INVSRL  > FLASTINVNO
  AND     INVDTE <= FDATE;
/*
  IF FMAXNO <> (FCOUNT+FLASTINVNO) THEN
    REINDEX_EXFACT(FKIND,FDATE);
  END IF;
*/
  UPDATE  INVOICEPRDT_T
  SET     INVSTAT = 2
  WHERE   INVKIND = FKIND
  AND     INVSRL  > FLASTINVNO
  AND     INVDTE <= FDATE;
  COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END FINAL_EXFACTDATE;

PROCEDURE FINAL_EXFACTNO(FKIND NUMBER,FFACTNO NUMBER) IS
  FLASTINVNO NUMBER(6);
  FCOUNT  NUMBER;
  FDATE  NUMBER;

BEGIN
--  SET TRANSACTION READ WRITE;
   SELECT NVL(MAX(INVSRL),0) INTO FLASTINVNO
   FROM    INVOICEPRDT_T
   WHERE   INVKIND = FKIND
   AND     INVSRL  <= FFACTNO
   AND    INVSTAT = 2;


  SELECT COUNT(INVSRL) INTO FCOUNT
  FROM   INVOICEPRDT_T
  WHERE   INVKIND = FKIND
  AND     INVSRL  > FLASTINVNO
  AND     INVSRL <= FFACTNO;

  SELECT  INVDTE INTO FDATE
  FROM    INVOICEPRDT_T
  WHERE   INVKIND = FKIND
--  AND     INVSRL  > FLASTINVNO
--  AND     INVSRL <= FFACTNO;
  AND     INVSRL = FFACTNO;
/*
  IF FFACTNO <> (FCOUNT+FLASTINVNO) THEN
    REINDEX_EXFACT(FKIND,FDATE);
  END IF;
*/
  UPDATE  INVOICEPRDT_T
  SET     INVSTAT = 2
  WHERE   INVKIND = FKIND
  AND     INVSRL  > FLASTINVNO
  AND     INVDTE <= FDATE;
  COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;

END FINAL_EXFACTNO;

FUNCTION REJFINAL_EXFACT(FKIND NUMBER,FFACTNO NUMBER,FDATE CHAR) RETURN NUMBER IS
    FLASTNO NUMBER(6);
    FLASTDATE VARCHAR2(10);
    DUMMY   NUMBER;
  BEGIN
--    SET TRANSACTION READ WRITE;

     IF  FFACTNO <> 0 THEN
        SELECT NVL(MAX(INVSRL),0) INTO FLASTNO
        FROM    INVOICEPRDT_T
        WHERE   INVKIND = FKIND
        AND     INVSTAT = 2;

        SELECT COUNT(0) INTO DUMMY
        FROM   INVOICEPRDT_T
        WHERE  INVKIND = FKIND
        AND    INVSTAT = 3
        AND    INVSRL BETWEEN  FFACTNO AND FLASTNO;

        IF DUMMY = 0 THEN
          UPDATE  INVOICEPRDT_T
          SET     INVSTAT = 1
          WHERE   INVKIND = FKIND
          AND     INVSTAT = 2
          AND     INVSRL BETWEEN  FFACTNO AND FLASTNO;
        ELSE
          ROLLBACK;
          RETURN 1;
        END IF;
      END IF;

     IF  FDATE IS NOT NULL THEN
        SELECT NVL(MAX(INVSRL),0)  INTO DUMMY
        FROM    INVOICEPRDT_T
        WHERE  INVKIND = FKIND
        AND    INVSTAT = 2;

                BEGIN
          SELECT INVDTE INTO FLASTDATE
          FROM   INVOICEPRDT_T
          WHERE  INVKIND = FKIND
          AND    INVSRL  = DUMMY;

        EXCEPTION
               WHEN NO_DATA_FOUND THEN
           FLASTDATE := '';
            END;

        SELECT COUNT(0) INTO DUMMY
        FROM   INVOICEPRDT_T
        WHERE  INVKIND = FKIND
        AND    INVSTAT = 3
        AND    INVDTE BETWEEN  FDATE AND FLASTDATE;

        IF DUMMY = 0 THEN
          UPDATE  INVOICEPRDT_T
          SET     INVSTAT = 1
          WHERE   INVKIND = FKIND
          AND     INVSTAT = 2
          AND     INVDTE BETWEEN  FDATE AND FLASTDATE;

        ELSE
          ROLLBACK;
          RETURN 1;
        END IF;

      END IF;
  COMMIT;
  RETURN 0;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RETURN 2;
    RAISE;
END REJFINAL_EXFACT;

FUNCTION REJFINAL_INFACT(FKIND NUMBER,FFACTNO NUMBER,FDATE CHAR) RETURN NUMBER IS
    FLASTNO NUMBER(6);
    FLASTDATE CHAR(8);
    DUMMY   NUMBER;
  BEGIN
--     SET TRANSACTION READ WRITE;
      IF  FFACTNO <> 0 THEN
        SELECT NVL(MAX(ITMNO),0) INTO FLASTNO
        FROM    ITEMFACT_T
        WHERE   ITMKIND = FKIND
        AND     ITMSTAT = 2;

        SELECT COUNT(0) INTO DUMMY
        FROM   ITEMFACT_T
        WHERE  ITMKIND = FKIND
        AND    ITMSTAT = 3
        AND    ITMNO BETWEEN  FFACTNO AND FLASTNO;

        IF DUMMY = 0 THEN
          UPDATE  ITEMFACT_T
          SET     ITMSTAT = 1
          WHERE   ITMKIND = FKIND
          AND     ITMSTAT = 2
          AND    ITMNO BETWEEN  FFACTNO AND FLASTNO;
        ELSE
          ROLLBACK;
          RETURN 1;
        END IF;
     END IF;


     IF  FDATE IS NOT NULL THEN

        SELECT ITMDTE INTO FLASTDATE
        FROM   ITEMFACT_T
        WHERE  ITMKIND = FKIND
        AND    ITMNO   = (SELECT NVL(MAX(ITMNO),0)
                          FROM    ITEMFACT_T
                          WHERE   ITMKIND = FKIND
                          AND     ITMSTAT = 2);


        SELECT COUNT(0) INTO DUMMY
        FROM   ITEMFACT_T
        WHERE  ITMKIND = FKIND
        AND    ITMSTAT = 3
        AND    ITMDTE BETWEEN  FDATE AND FLASTDATE;

        IF DUMMY = 0 THEN
          UPDATE  ITEMFACT_T
          SET     ITMSTAT = 1
          WHERE   ITMKIND = FKIND
          AND     ITMSTAT = 2
          AND     ITMDTE BETWEEN  FDATE AND FLASTDATE;
        ELSE
          ROLLBACK;
          RETURN 1;
        END IF;
      END IF;

  COMMIT;
  RETURN 0;

EXCEPTION

  WHEN OTHERS THEN
    ROLLBACK;
    RETURN 2;
    RAISE;
END REJFINAL_INFACT;

PROCEDURE CANCELFINAL_INFACT(FKIND NUMBER,FLFACTNO NUMBER,FHFACTNO NUMBER,FCANCELDATE CHAR) IS
BEGIN
--  SET TRANSACTION READ WRITE;

  UPDATE  ITEMFACT_T
  SET     ITMSTAT   = 3,
          CANCELDTE = FCANCELDATE
  WHERE   ITMKIND = FKIND
  AND     ITMSTAT = 2
  AND     ITMNO  BETWEEN FLFACTNO AND FHFACTNO;


  DELETE FROM INFACTHVL_T
  WHERE   ITMKIND = FKIND
  AND     ITMNO   IN (SELECT  ITMNO
                      FROM    ITEMFACT_T
                      WHERE   ITMSTAT = 3
                      AND     ITMKIND = FKIND);

  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RAISE;
END CANCELFINAL_INFACT;

PROCEDURE CANCELFINAL_EXFACT(FKIND NUMBER,FLFACTNO NUMBER,FHFACTNO NUMBER,FCANCELDATE CHAR) IS
BEGIN
--  SET TRANSACTION READ WRITE;

  UPDATE  INVOICEPRDT_T
  SET     INVSTAT   = 3,
          CANCELDTE = FCANCELDATE
  WHERE   INVKIND = FKIND
  AND     INVSTAT = 2
  AND     INVSRL  BETWEEN FLFACTNO AND FHFACTNO;

  DELETE FROM OUTFACTHVL_T
  WHERE   INVKIND = FKIND
  AND     INVSRL   IN (SELECT  INVSRL
                       FROM    INVOICEPRDT_T
                       WHERE   INVSTAT = 3
                       AND     INVKIND = FKIND
                       );

  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RAISE;
END  CANCELFINAL_EXFACT;

PROCEDURE INSERT_SRVTMPTBL(FPRCNO NUMBER,FDATE CHAR) IS

  CURSOR PRODUCTFACT_CUR IS
    SELECT * FROM PRODUCTFACT_T
    WHERE   PRCNO   > FPRCNO
    AND     PRCDTE  <= FDATE
    AND     PRCSTAT <> 2
    FOR UPDATE;

  CURSOR PRODUCTFACR_CUR IS
    SELECT * FROM PRODUCTFACR_T
    WHERE  PRCNO  IN( SELECT PRCNO FROM PRODUCTFACT_T
                      WHERE   PRCNO   > FPRCNO
                      AND     PRCDTE  <= FDATE
                      AND     PRCSTAT <> 2);

   PRODUCTFACT_REC PRODUCTFACT_CUR%ROWTYPE;
   PRODUCTFACR_REC PRODUCTFACR_CUR%ROWTYPE;
 BEGIN
   DELETE FROM  TMP_PRODUCTFACT;
   DELETE FROM  TMP_PRODUCTFACR;
  FOR  PRODUCTFACT_REC IN PRODUCTFACT_CUR LOOP
    INSERT INTO TMP_PRODUCTFACT
       (PRCNO, PRCDTE, PRCDESC, PRCSTAT, CUSTNO)
    VALUES
     (PRODUCTFACT_REC.PRCNO, PRODUCTFACT_REC.PRCDTE,
      PRODUCTFACT_REC.PRCDESC, PRODUCTFACT_REC.PRCSTAT, PRODUCTFACT_REC.CUSTNO);
 END LOOP;

  FOR PRODUCTFACR_REC IN PRODUCTFACR_CUR LOOP
    INSERT INTO TMP_PRODUCTFACR
       (PRCNO, PRDROW, SRVCODE, PRDPRICE)
    VALUES
       (PRODUCTFACR_REC.PRCNO, PRODUCTFACR_REC.PRDROW,
        PRODUCTFACR_REC.SRVCODE, PRODUCTFACR_REC.PRDPRICE);
  END LOOP;

END  INSERT_SRVTMPTBL;

PROCEDURE REINDEX_SRVFACT(FDATE CHAR) IS

   CURSOR FACT_CUR IS
     SELECT * FROM TMP_PRODUCTFACT
     ORDER BY PRCDTE,PRCNO;

   CURSOR FACR_CUR(FPRCNO NUMBER) IS
     SELECT * FROM  TMP_PRODUCTFACR
     WHERE   PRCNO = FPRCNO;

   FACT_REC  FACT_CUR%ROWTYPE;
   FACR_REC  FACR_CUR%ROWTYPE;
   FSEQ NUMBER(6);
 BEGIN
--    SET TRANSACTION READ WRITE;

      SELECT NVL(MAX(PRCNO),0) INTO FSEQ
      FROM   PRODUCTFACT_T
      WHERE  PRCDTE <= FDATE
      AND    PRCSTAT = 2 ;

      INSERT_SRVTMPTBL(FSEQ,FDATE);
      FOR FACT_REC IN FACT_CUR LOOP
         DELETE FROM  PRODUCTFACR_T
         WHERE   PRCNO   = FACT_REC.PRCNO;

         DELETE FROM  PRODUCTFACT_T
         WHERE   PRCNO   = FACT_REC.PRCNO;

      END LOOP;
      FSEQ := FSEQ + 1 ;
      FOR FACT_REC IN FACT_CUR LOOP
         INSERT INTO  PRODUCTFACT_T
            (PRCNO, PRCDTE, PRCDESC, PRCSTAT, CUSTNO)
         VALUES
           (FSEQ,FACT_REC.PRCDTE, FACT_REC.PRCDESC, FACT_REC.PRCSTAT, FACT_REC.CUSTNO);

         FOR FACR_REC IN FACR_CUR(FACT_REC.PRCNO) LOOP
          INSERT INTO PRODUCTFACR_T
            (PRCNO, PRDROW, SRVCODE, PRDPRICE)

          VALUES
            (FSEQ,FACR_REC.PRDROW, FACR_REC.SRVCODE, FACR_REC.PRDPRICE);
        END LOOP;
       FSEQ := FSEQ + 1;
      END LOOP;
      COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
END  REINDEX_SRVFACT;

PROCEDURE FINAL_SRVFACTDATE(FDATE CHAR) IS

  FLASTFINAL_NO NUMBER(6);
  FCOUNT  NUMBER;
  FMAXNO  NUMBER;
BEGIN
--  SET TRANSACTION READ WRITE;
  SELECT NVL(MAX(PRCNO),0) INTO FLASTFINAL_NO
  FROM   PRODUCTFACT_T
  WHERE  PRCDTE <= FDATE
  AND    PRCSTAT = 2 ;


  SELECT COUNT(PRCNO) INTO FCOUNT
  FROM   PRODUCTFACT_T
  WHERE  PRCNO  > FLASTFINAL_NO
  AND    PRCDTE <= FDATE;

  SELECT NVL(MAX(PRCNO),0) INTO FMAXNO
  FROM   PRODUCTFACT_T
  WHERE  PRCNO  > FLASTFINAL_NO
  AND    PRCDTE <= FDATE;
/*
  IF FMAXNO <> (FCOUNT+FLASTFINAL_NO) THEN
    REINDEX_SRVFACT(FDATE);
  END IF;
 */
  UPDATE  PRODUCTFACT_T
  SET     PRCSTAT = 2
  WHERE   PRCNO > FLASTFINAL_NO
  AND     PRCDTE <= FDATE;
  COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
  END FINAL_SRVFACTDATE;

  PROCEDURE FINAL_SRVFACTNO(FPRCNO NUMBER) IS

    FLASTFINAL_NO NUMBER(6);
    FCOUNT  NUMBER;
    FDATE  NUMBER;
  BEGIN
--     SET TRANSACTION READ WRITE;

     SELECT  NVL(MAX(PRCNO),0) INTO FLASTFINAL_NO
     FROM    PRODUCTFACT_T
     WHERE   PRCNO  <= FPRCNO
     AND     PRCSTAT = 2;

     SELECT COUNT(PRCNO) INTO FCOUNT
     FROM   PRODUCTFACT_T
     WHERE  PRCNO   > FLASTFINAL_NO
     AND    PRCNO  <= FPRCNO;


      SELECT  PRCDTE INTO FDATE
      FROM    PRODUCTFACT_T
      WHERE   PRCNO   = FPRCNO;
/*
    IF FPRCNO <> (FCOUNT+FLASTFINAL_NO) THEN
      REINDEX_SRVFACT(FDATE);
    END IF;
 */
    UPDATE  PRODUCTFACT_T
    SET     PRCSTAT = 2
    WHERE   PRCNO   > FLASTFINAL_NO
    AND     PRCNO  <= FPRCNO;
    COMMIT;
    EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      RAISE;
  END FINAL_SRVFACTNO;

  FUNCTION  REJFINAL_SRVFACT(FFACTNO NUMBER,FDATE CHAR) RETURN NUMBER IS
    FLASTNO NUMBER(6);
    FLASTDATE CHAR(8);
    DUMMY   NUMBER;
  BEGIN
--     SET TRANSACTION READ WRITE;
      IF  FFACTNO <> 0 THEN

        SELECT NVL(MAX(PRCNO),0) INTO FLASTNO
        FROM    PRODUCTFACT_T
        WHERE   PRCSTAT = 2;

        SELECT COUNT(0) INTO DUMMY
        FROM   PRODUCTFACT_T
        WHERE  PRCSTAT = 3
        AND    PRCNO BETWEEN  FFACTNO AND FLASTNO;

        IF DUMMY = 0 THEN
          UPDATE  PRODUCTFACT_T
          SET     PRCSTAT = 1
          WHERE   PRCSTAT = 2
          AND     PRCNO BETWEEN  FFACTNO AND FLASTNO;
        ELSE
          ROLLBACK;
          RETURN 1;
        END IF;
     END IF;

     FLASTDATE := '';

     IF  FDATE IS NOT NULL THEN

        SELECT PRCDTE INTO FLASTDATE
        FROM   PRODUCTFACT_T T,
               (SELECT NVL(MAX(PRCNO),0) PRCNO
                FROM    PRODUCTFACT_T
                WHERE   PRCSTAT = 2)A
        WHERE  T.PRCNO   = A.PRCNO ;


        SELECT COUNT(0) INTO DUMMY
        FROM   PRODUCTFACT_T
        WHERE  PRCSTAT = 3
        AND    PRCDTE BETWEEN  FDATE AND FLASTDATE;

        IF DUMMY = 0 THEN
          UPDATE  PRODUCTFACT_T
          SET     PRCSTAT = 1
          WHERE   PRCSTAT = 2
          AND    PRCDTE BETWEEN  FDATE AND FLASTDATE;
        ELSE
          ROLLBACK;
          RETURN 1;
        END IF;
    END IF;

  COMMIT;
  RETURN 0;

EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RETURN 2;
    RAISE;
END REJFINAL_SRVFACT;

PROCEDURE CANCELFINAL_SRVFACT(FLFACTNO NUMBER,FHFACTNO NUMBER,FCANCELDATE CHAR) IS

BEGIN
--  SET TRANSACTION READ WRITE;

  UPDATE  PRODUCTFACT_T
  SET     PRCSTAT   = 3,
          CANCELDTE = FCANCELDATE
  WHERE   PRCSTAT = 2
  AND     PRCNO  BETWEEN FLFACTNO AND FHFACTNO;

  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RAISE;

END  CANCELFINAL_SRVFACT;

FUNCTION CHECK_ATF_NO(FNO VARCHAR2) RETURN BOOLEAN IS
    DUMMY NUMBER;
 BEGIN
    SELECT COUNT(1) INTO DUMMY
    FROM   IDCONTACTINFO_V
    WHERE  CNTCODE = FNO;

    RETURN  DUMMY <> 0 ;

END CHECK_ATF_NO;

PROCEDURE SENDNEXTYEAR(FYEAR NUMBER) IS
BEGIN
--  SET TRANSACTION READ WRITE;

  INSERT INTO ACCADDSUB_T
  (ADCODE, MOIN_CODE, MOIN_YEAR, TAF_CODE)
  SELECT ADCODE,MOIN_CODE, FYEAR+1, TAF_CODE
  FROM   ACCADDSUB_T
  WHERE  MOIN_YEAR = FYEAR ;

  INSERT INTO ACCCUST_T
  (CUSTNO, MOIN_CODE, MOIN_YEAR, TAF_CODE, SEC_TAF_CODE)
  SELECT CUSTNO,MOIN_CODE, FYEAR+1, TAF_CODE, SEC_TAF_CODE
  FROM   ACCCUST_T
  WHERE  MOIN_YEAR = FYEAR ;

  INSERT INTO ACCSALES_T
  (GDS_CODE, MOIN_CODE, MOIN_YEAR, TAF_CODE, MOIN_CODE_EX, TAF_CODE_EX)
  SELECT GDS_CODE,MOIN_CODE, FYEAR+1, TAF_CODE, MOIN_CODE_EX, TAF_CODE_EX
  FROM   ACCSALES_T
  WHERE  MOIN_YEAR = FYEAR ;

  INSERT INTO ACCSVR_T
  (SRVCODE, MOIN_CODE, MOIN_YEAR, TAF_CODE)
  SELECT SRVCODE,MOIN_CODE, FYEAR+1, TAF_CODE
  FROM   ACCSVR_T
  WHERE  MOIN_YEAR = FYEAR ;
  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    RAISE;
END;

PROCEDURE SALE_RETURNVOCH(FRDATE VARCHAR2, TRDATE VARCHAR2, VCHNO NUMBER, VCHYEAR NUMBER)IS

CURSOR DOC_CUR IS


SELECT RowCount,GDS_DESCF, OFNUM , OFDATE, CUSTNAME, GRP_M_DESC,
       BED,BES,MOIN_CODE,TAFSILY_CODE,CENTER_CODE FROM
---------------------------------------- BES -----------------------------------
(
SELECT 1 RowCount, NULL OFNUM , R_DATE OFDATE, NULL CUSTNAME, GRP_M_DESC, NULL GDS_DESCF,
--SELECT 1 RowCount, 'مرجوعي فروش ' || GRP_M_DESC GDS_DESCF,
       ROUND(SUM(NVL(R_QTY, 0) * NVL(OFPRICE, 0))) BED,
--       SUM(((R_QTY * OFPRICE) - (((R_QTY * OFPRICE)*NVL(ABATE, 0))/100)))BED,
       0 BES,
       MOIN_CODE_EX MOIN_CODE , TAF_CODE_EX TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G,
     GRP_M GR , ACCSALES_T A
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND D.GDS_CODE = A.GDS_CODE
  --99AND NVL(OFDLVPLACE, 0) = 0
--  AND RT.R_CODE = 4
--  AND R_GDSCODE=89400052
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE_EX, TAF_CODE_EX, R_DATE
UNION ALL
SELECT 2 RowCount, NULL OFNUM ,  R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        ROUND(SUM(((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
        (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM)) -- 1400/01/31
                union all
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOLL, 0))) / 100) / OFQTY) * R_QTY)))BED,
--        ROUND(SUM(((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) * (SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOLL, 0))) / 100) / OFQTY) * R_QTY)))BED,
       0 BES,
       32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G, ADDEDTAX_T
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND AD_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND NVL(OFDLVPLACE, 0) = 0
  GROUP BY R_DATE
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
UNION ALL
SELECT 3 RowCount, NULL OFNUM, R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 3 RowCount, TO_CHAR('ماليات ارزش افزوده') GDS_DESCF,
ROUND(SUM((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
(SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM)) -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * AD_TOTAL)) / 100) / OFQTY) * R_QTY)) -
--(SIGN(NVL(GDS_TAX, 0)) * AD_TOTAL)) / 100) / OFQTY) * R_QTY)) -
ROUND(SUM(((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
(SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM)) -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOLL, 0)))) / 100) / OFQTY) * R_QTY))BED,
--(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOLL, 0)))) / 100) / OFQTY) * R_QTY))BED,
       0 BES,
       32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G, ADDEDTAX_T
--WHERE R_DATE BETWEEN FRDATE AND TRDATE
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND AD_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND T.TAFSILY_YEAR = R_OFYEAR
  AND D.CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND NVL(OFDLVPLACE, 0) = 0
  GROUP BY R_DATE
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
UNION ALL
SELECT 4 RowCount, R_OFNUM OFNUM,R_DATE OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
         ROUND(SUM((((OFQTY * OFPRICE) * (NVL(ABATE, 0) / 100))/OFQTY)* R_QTY)) BED ,
--         SUM((((((OFQTY * OFPRICE)*NVL(ABATE, 0)/100 )))/OFQTY)*(R_QTY)) BED,
--       SUM(ROUND(((ROUND((OFQTY * OFPRICE) -
--       ((ROUND(((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))/OFQTY))*R_QTY)))) BED,
      0 BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE,R_OFNUM,R_DATE
UNION ALL

SELECT 5 RowCount, R_OFNUM OFNUM , R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 5 RowCount, TO_CHAR('عوارض ارزش افزوده') GDS_DESCF,
       0 BED,
       ROUND(SUM(NVL(R_QTY, 0) * NVL(OFPRICE, 0))) BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G,
     GRP_M GR , ACCCUST_T A
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND T.CUSTNO = A.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE, TAF_CODE, R_OFNUM,R_DATE
UNION ALL
SELECT 6 RowCount, R_OFNUM OFNUM, R_DATE OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 6 RowCount, TO_CHAR('عوارض ارزش افزوده') GDS_DESCF,
       0 BED,
       ROUND(SUM((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
       (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))  -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOTAL, 0)) / 100)) / OFQTY) * R_QTY))BES,
--       (SIGN(NVL(G.GDS_TAX, 0)) * NVL(AD_TOTAL, 0)) / 100)) / OFQTY) * R_QTY))BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G, ADDEDTAX_T
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND AD_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE,R_OFNUM,R_DATE
UNION ALL
SELECT 7 RowCount, NULL OFNUM, R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
       0 BED,
       ROUND(SUM((((OFQTY * OFPRICE) * (NVL(ABATE, 0) / 100))/OFQTY)* R_QTY)) BES,
       98103 MOIN_CODE, NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND A.MOIN_YEAR = VCHYEAR
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, SEC_TAF_CODE, TAF_CODE,R_DATE
union all
------------------------------------- PACK_TYPE = 9 ----------------------------
SELECT 1 RowCount, NULL OFNUM , R_DATE OFDATE, NULL CUSTNAME, GRP_M_DESC, NULL GDS_DESCF,
--SELECT 1 RowCount, 'مرجوعي فروش ' || GRP_M_DESC GDS_DESCF,
       ROUND(SUM(NVL(R_OFFER, 0) * NVL(OFPRICE9, 0))) BED,
--       SUM(((R_QTY * OFPRICE) - (((R_QTY * OFPRICE)*NVL(ABATE, 0))/100)))BED,
       0 BES,
       MOIN_CODE_EX MOIN_CODE , TAF_CODE_EX TAFSILY_CODE, NULL CENTER_CODE
FROM GRP_M GR , ACCSALES_T A, GOODS G,
(
 SELECT OFNUM OFNUM9, CU_CODE CU_CODE9, OFPRICE OFPRICE9, ABATE ABATE9, GDS_CODE GDS_CODE9
 FROM OFFERDTL_T
 WHERE PACK_TYPE <> 9
)NULPRC,
     RETURN_TIT_T RT, RETURN_ROW_T RR,
     OFFERTIT_T T, OFFERDTL_T D
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND MOIN_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND D.GDS_CODE = A.GDS_CODE
  AND NVL(OFDLVPLACE, 0) = 0
  AND CU_CODE = CU_CODE9
  AND D.OFNUM = OFNUM9
  AND D.GDS_CODE = GDS_CODE9

--  AND RT.R_CODE = 4
--  AND R_GDSCODE=89400052
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE_EX, TAF_CODE_EX, R_DATE
UNION ALL
SELECT 4 RowCount, R_OFNUM OFNUM,R_DATE OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
         ROUND(SUM((((OFQTY * OFPRICE9) * (NVL(100, 0) / 100))/OFQTY)* R_OFFER)) BED ,
--         SUM((((((OFQTY * OFPRICE)*NVL(ABATE, 0)/100 )))/OFQTY)*(R_QTY)) BED,
--       SUM(ROUND(((ROUND((OFQTY * OFPRICE) -
--       ((ROUND(((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))/OFQTY))*R_QTY)))) BED,
      0 BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, GOODS G,
(
 SELECT OFNUM OFNUM9, CU_CODE CU_CODE9, OFPRICE OFPRICE9, ABATE ABATE9, GDS_CODE GDS_CODE9
 FROM OFFERDTL_T
 WHERE PACK_TYPE <> 9
)NULPRC,
     RETURN_TIT_T RT, RETURN_ROW_T RR,
     OFFERTIT_T T, OFFERDTL_T D
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
  AND CU_CODE = CU_CODE9
  AND D.OFNUM = OFNUM9
  AND D.GDS_CODE = GDS_CODE9
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE,R_OFNUM,R_DATE
UNION ALL

SELECT 5 RowCount, R_OFNUM OFNUM , R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 5 RowCount, TO_CHAR('عوارض ارزش افزوده') GDS_DESCF,
       0 BED,
       ROUND(SUM(NVL(R_OFFER, 0) * NVL(OFPRICE9, 0))) BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM GOODS G, GRP_M GR , ACCCUST_T A,
(
 SELECT OFNUM OFNUM9, CU_CODE CU_CODE9, OFPRICE OFPRICE9, ABATE ABATE9, GDS_CODE GDS_CODE9
 FROM OFFERDTL_T
 WHERE PACK_TYPE <> 9
)NULPRC,
     RETURN_TIT_T RT, RETURN_ROW_T RR,
     OFFERTIT_T T, OFFERDTL_T D
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND T.CUSTNO = A.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
  AND CU_CODE = CU_CODE9
  AND D.OFNUM = OFNUM9
  AND D.GDS_CODE = GDS_CODE9
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE, TAF_CODE, R_OFNUM,R_DATE
UNION ALL
SELECT 17 RowCount, T.OFNUM, R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
       0 BED,
       ROUND(SUM((((OFQTY * OFPRICE9) * (NVL(100, 0) / 100))/OFQTY)* R_OFFER)) BES,
       98106 MOIN_CODE, NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC,
(
 SELECT OFNUM OFNUM9, CU_CODE CU_CODE9, OFPRICE OFPRICE9, ABATE ABATE9, GDS_CODE GDS_CODE9
 FROM OFFERDTL_T
 WHERE PACK_TYPE <> 9
)NULPRC,
     RETURN_TIT_T RT, RETURN_ROW_T RR,
     OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND A.MOIN_YEAR = VCHYEAR
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
  AND IC.CUSTNO = T.CUSTNO
  AND CU_CODE = CU_CODE9
  AND D.OFNUM = OFNUM9
  AND D.GDS_CODE = GDS_CODE9
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE, SEC_TAF_CODE, T.OFNUM, R_DATE

------------------------------------- PACK_TYPE = 9 ----------------------------

)
WHERE NVL(BED, 0) <> 0
  OR NVL(BES, 0) <> 0
ORDER BY OFDATE,RowCount;



  iFRDATE NUMBER;
  iYEAR NUMBER;
  FLAG BOOLEAN;
  ISEMPTY BOOLEAN;
  I NUMBER;
  VOCHDATE  NUMBER;
  VOCHNO NUMBER;

  ERRCODE   NUMBER;
  ERRTEXT   VARCHAR2(255);

  DOC_REC DOC_CUR%ROWTYPE;
  REMAIN  NUMBER;
BEGIN
  DELETE FROM ERRTBL;

  FLAG:= TRUE;
  ISEMPTY:= TRUE;
  I:= 0;
  VOCHDATE := 0;

  FOR DOC_REC IN DOC_CUR LOOP
      IF (DOC_REC.RowCount IN (2,7)) AND (TO_NUMBER(NVL(DOC_REC.MOIN_CODE, 0)) =0 ) THEN
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('براي کالاي '|| DOC_REC.GDS_DESCF || ' حساب معين تعريف نشده است', 1));
      END IF;

  END LOOP;


  VOCHNO := VCHNO;
  FOR DOC_REC IN DOC_CUR LOOP

      --==============================================================================
SELECT SUM(NVL(BES,0))-SUM(NVL(BED,0))
INTO REMAIN
FROM
(
SELECT RowCount,GDS_DESCF, OFNUM , OFDATE, CUSTNAME, GRP_M_DESC,
       BED,BES,MOIN_CODE,TAFSILY_CODE,CENTER_CODE FROM
---------------------------------------- BES -----------------------------------
(
SELECT 1 RowCount, NULL OFNUM , R_DATE OFDATE, NULL CUSTNAME, GRP_M_DESC, NULL GDS_DESCF,
--SELECT 1 RowCount, 'مرجوعي فروش ' || GRP_M_DESC GDS_DESCF,
       ROUND(SUM(NVL(R_QTY, 0) * NVL(OFPRICE, 0))) BED,
--       SUM(((R_QTY * OFPRICE) - (((R_QTY * OFPRICE)*NVL(ABATE, 0))/100)))BED,
       0 BES,
       MOIN_CODE_EX MOIN_CODE , TAF_CODE_EX TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G,
     GRP_M GR , ACCSALES_T A
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND D.GDS_CODE = A.GDS_CODE
  AND NVL(OFDLVPLACE, 0) = 0
--  AND RT.R_CODE = 4
--  AND R_GDSCODE=89400052
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE_EX, TAF_CODE_EX, R_DATE
UNION ALL
SELECT 2 RowCount, NULL OFNUM ,  R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        ROUND(SUM(((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
        (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                --AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM)) -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOLL, 0))) / 100) / OFQTY) * R_QTY)))BED,
--        ROUND(SUM(((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) * (SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOLL, 0))) / 100) / OFQTY) * R_QTY)))BED,
       0 BES,
       32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G, ADDEDTAX_T
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND AD_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND NVL(OFDLVPLACE, 0) = 0
  AND D.GDS_CODE = G.GDS_CODE
  GROUP BY R_DATE
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
UNION ALL
SELECT 3 RowCount, NULL OFNUM, R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 3 RowCount, TO_CHAR('ماليات ارزش افزوده') GDS_DESCF,
ROUND(SUM((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
(SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                --AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))  -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * AD_TOTAL)) / 100) / OFQTY) * R_QTY)) -
--(SIGN(NVL(GDS_TAX, 0)) * AD_TOTAL)) / 100) / OFQTY) * R_QTY)) -
ROUND(SUM(((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
--(SIGN(NVL((1),0) * NVL(AD_TOLL, 0)))) / 100) / OFQTY) * R_QTY))BED,
(SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                --AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))  -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOLL, 0)))) / 100) / OFQTY) * R_QTY))BED,
       0 BES,
       32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G, ADDEDTAX_T
--WHERE R_DATE BETWEEN FRDATE AND TRDATE
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND AD_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND T.TAFSILY_YEAR = R_OFYEAR
  AND D.CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND NVL(OFDLVPLACE, 0) = 0
  GROUP BY R_DATE
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
UNION ALL
SELECT 4 RowCount, R_OFNUM OFNUM,R_DATE OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
         ROUND(SUM((((OFQTY * OFPRICE) * (NVL(ABATE, 0) / 100))/OFQTY)* R_QTY)) BED ,
--         SUM((((((OFQTY * OFPRICE)*NVL(ABATE, 0)/100 )))/OFQTY)*(R_QTY)) BED,
--       SUM(ROUND(((ROUND((OFQTY * OFPRICE) -
--       ((ROUND(((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))/OFQTY))*R_QTY)))) BED,
      0 BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE,R_OFNUM,R_DATE
UNION ALL

SELECT 5 RowCount, R_OFNUM OFNUM , R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 5 RowCount, TO_CHAR('عوارض ارزش افزوده') GDS_DESCF,
       0 BED,
       ROUND(SUM(NVL(R_QTY, 0) * NVL(OFPRICE, 0))) BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G,
     GRP_M GR , ACCCUST_T A
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND T.CUSTNO = A.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE, TAF_CODE, R_OFNUM,R_DATE
UNION ALL
SELECT 6 RowCount, R_OFNUM OFNUM, R_DATE OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 6 RowCount, TO_CHAR('عوارض ارزش افزوده') GDS_DESCF,
       0 BED,
       ROUND(SUM((((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE) * NVL(ABATE, 0)) / 100)) *
       (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                --AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM)) -- 1400/01/31
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOTAL, 0)) / 100)) / OFQTY) * R_QTY))BES,
--       (SIGN(NVL(G.GDS_TAX, 0)) * NVL(AD_TOTAL, 0)) / 100)) / OFQTY) * R_QTY))BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G, ADDEDTAX_T
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND AD_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE,R_OFNUM,R_DATE
UNION ALL
SELECT 7 RowCount, NULL OFNUM, R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
       0 BED,
       ROUND(SUM((((OFQTY * OFPRICE) * (NVL(ABATE, 0) / 100))/OFQTY)* R_QTY)) BES,
       98103 MOIN_CODE, NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND PACK_TYPE <> 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND A.MOIN_YEAR = VCHYEAR
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
  AND IC.CUSTNO = T.CUSTNO
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE, SEC_TAF_CODE, R_DATE
union all
------------------------------------- PACK_TYPE = 9 ----------------------------
SELECT 1 RowCount, NULL OFNUM , R_DATE OFDATE, NULL CUSTNAME, GRP_M_DESC, NULL GDS_DESCF,
--SELECT 1 RowCount, 'مرجوعي فروش ' || GRP_M_DESC GDS_DESCF,
       ROUND(SUM(NVL(R_OFFER, 0) * NVL(OFPRICE, 0))) BED,
--       SUM(((R_QTY * OFPRICE) - (((R_QTY * OFPRICE)*NVL(ABATE, 0))/100)))BED,
       0 BES,
       MOIN_CODE_EX MOIN_CODE , TAF_CODE_EX TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G,
     GRP_M GR , ACCSALES_T A
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND MOIN_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND D.GDS_CODE = A.GDS_CODE
  AND NVL(OFDLVPLACE, 0) = 0
--  AND RT.R_CODE = 4
--  AND R_GDSCODE=89400052
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE_EX, TAF_CODE_EX, R_DATE
UNION ALL
SELECT 4 RowCount, R_OFNUM OFNUM,R_DATE OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
         ROUND(SUM((((OFQTY * OFPRICE) * (NVL(ABATE, 0) / 100))/OFQTY)* R_OFFER)) BED ,
--         SUM((((((OFQTY * OFPRICE)*NVL(ABATE, 0)/100 )))/OFQTY)*(R_QTY)) BED,
--       SUM(ROUND(((ROUND((OFQTY * OFPRICE) -
--       ((ROUND(((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))/OFQTY))*R_QTY)))) BED,
      0 BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND IC.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE,R_OFNUM,R_DATE
UNION ALL

SELECT 5 RowCount, R_OFNUM OFNUM , R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--SELECT 5 RowCount, TO_CHAR('عوارض ارزش افزوده') GDS_DESCF,
       0 BED,
       ROUND(SUM(NVL(R_OFFER, 0) * NVL(OFPRICE, 0))) BES,
       A.MOIN_CODE, TAF_CODE TAFSILY_CODE, NULL CENTER_CODE
FROM RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G,
     GRP_M GR , ACCCUST_T A
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND A.MOIN_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND GR.GRP_M_CODE = G.GRP_M_CODE
  AND T.CUSTNO = A.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY GR.GRP_M_CODE, GRP_M_DESC, MOIN_CODE, TAF_CODE, R_OFNUM,R_DATE
UNION ALL
SELECT 17 RowCount, T.OFNUM, R_DATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--'تخفيف'
       0 BED,
       ROUND(SUM((((OFQTY * OFPRICE) * (NVL(ABATE, 0) / 100))/OFQTY)* R_OFFER)) BES,
       98106 MOIN_CODE, NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
FROM ACCCUST_T A, IDCUSTOMER_T IC, RETURN_TIT_T RT, RETURN_ROW_T RR, OFFERTIT_T T, OFFERDTL_T D, GOODS G
WHERE R_DATE BETWEEN FRDATE AND TRDATE
  AND RT.R_YEAR = VCHYEAR
  AND PACK_TYPE = 9
  AND (NVL(R_DOCNO, 0) <> 0 OR NVL(R_WASTE_DOC, 0) <> 0)
  AND A.MOIN_YEAR = VCHYEAR
  AND RT.R_CODE = RR.R_CODE
  AND RT.R_YEAR = RR.R_YEAR
  AND T.OFNUM = R_OFNUM
  AND D.OFNUM = R_OFNUM
  AND TAFSILY_YEAR = R_OFYEAR
  AND CU_CODE = R_OFYEAR
  AND D.GDS_CODE = R_GDSCODE
  AND D.GDS_CODE = G.GDS_CODE
  AND A.CUSTNO = T.CUSTNO
  AND NVL(OFDLVPLACE, 0) = 0
  AND IC.CUSTNO = T.CUSTNO
--  AND R_GDSCODE=89400052
--  AND RT.R_CODE = 4
GROUP BY A.MOIN_CODE, TAF_CODE, SEC_TAF_CODE, T.OFNUM, R_DATE

------------------------------------- PACK_TYPE = 9 ----------------------------

)
WHERE NVL(BED, 0) <> 0
  OR NVL(BES, 0) <> 0
);
--==============================================================================
if VOCHDATE = 0 then
        VOCHDATE := DOC_REC.OFDATE;
      end if;

      if VOCHDATE <> DOC_REC.OFDATE then
        I:=0;
        VOCHDATE := DOC_REC.OFDATE;
        VOCHNO := VOCHNO+1;
      end if;
      I:= I + 1;
        if I = 1 THEN
          INSERT INTO SALEVCHT_T
                (VCHYEAR, VCHNO, VCHTYP, VCHDTE, VCHDESC, VCHSTAT)
          VALUES
                (VCHYEAR, VOCHNO, 1, VOCHDATE, 'سند '||' '|| DECODE(TO_NUMBER(SUBSTR(FRDATE,5,2)),
                                                                          1,'برگشت از فروش فروردين ماه',
                                                                          2,'برگشت از فروش ارديبهشت ماه',
                                                                          3,'برگشت از فروش خرداد ماه',
                                                                          4,'برگشت از فروش تير ماه',
                                                                          5,'برگشت از فروش مرداد ماه',
                                                                          6,'برگشت از فروش شهريور ماه',
                                                                          7,'برگشت از فروش مهر ماه',
                                                                          8,'برگشت از فروش آبان ماه',
                                                                          9,'برگشت از فروش آذز ماه',
                                                                          10,'برگشت از فروش دي ماه',
                                                                          11,'برگشت از فروش بهمن ماه',
                                                                          12,'برگشت از فروش اسفند ماه'),1);
        END IF;

          INSERT INTO SALEVCHR_T
            (VCHYEAR, VCHNO, VSEQ, VDESC,
             VDEBIT, VCREDIT,
             MOIN_YEAR, MOIN_CODE, TAFSILY_CODE, SEC_TAF_CODE)
          VALUES
            (VCHYEAR, VOCHNO, I, DECODE(DOC_REC.RowCount,
                                       1, 'مرجوعي فروش ' || DOC_REC.GRP_M_DESC,
                                       2, 'ماليات ارزش افزوده',
                                       3, 'عوارض ارزش افزوده',
                                       4, DOC_REC.CUSTNAME || ' بابت مرجوعي از فاکتور شماره - تخفيفات' ||DOC_REC.OFNUM,
                                       5, DOC_REC.CUSTNAME || ' بابت مرجوعي از فاکتور شماره' ||DOC_REC.OFNUM,
                                       6, DOC_REC.CUSTNAME || ' بابت مرجوعي از فاکتور شماره - ارزش افزوده ' ||DOC_REC.OFNUM,
                                       7, 'هزينه تخفيغات محصولات شرکت',
                                       17, 'تخفيفات کالايي '),
            DECODE(DOC_REC.RowCount,2,NVL(DOC_REC.BED,0)+REMAIN,NVL(DOC_REC.BED,0)), NVL(DOC_REC.BES,0),
            SUBSTR(FRDATE,1,4), DOC_REC.MOIN_CODE,DOC_REC.TAFSILY_CODE, DOC_REC.CENTER_CODE);
    END LOOP;
    DELETE FROM SALEVCHR_T
    WHERE NVL(VDEBIT, 0) = 0
      AND NVL(VCREDIT, 0) = 0;

--  ELSIF ISEMPTY THEN
--    RETURN 3;
--  END IF;

END;


FUNCTION SALE_INVOCH(FRDATE VARCHAR2, TRDATE VARCHAR2, VCHNO NUMBER, VCHYEAR NUMBER) RETURN NUMBER IS

CURSOR DOC_CUR IS


/*SELECT RowCount,GDS_DESCF,
       DECODE(ROWCOUNT,1,OFNUM,NULL) OFNUM,OFDATE,
       CUSTNAME,
       GRP_M_DESC,
       SUM(NVL(BED,0)) BED,SUM(NVL(BES,0)) BES,
       MOIN_CODE,TAFSILY_CODE,CENTER_CODE
FROM
( */
SELECT RowCount,GDS_DESCF,
       /*DECODE(ROWCOUNT,1,OFNUM,NULL)*/ OFNUM,OFDATE,
       CUSTNAME,
       GRP_M_DESC,
       BED,BES,MOIN_CODE,TAFSILY_CODE,CENTER_CODE FROM
---------------------------------------- BED -----------------------------------
(

SELECT 1 RowCount, OFNUM,OFDATE ,CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
       ROUND(NVL(BED, 0))BED,
       0 BES,
       MOIN_CODE , TAFSILY_CODE, NULL CENTER_CODE
  FROM
(
 SELECT  OFNUM,OFDATE, MOIN_CODE,  TAFSILY_CODE,
        CUSTNAME,
        ROUND(BED - ROUND((NVL(ADVAL, 0)*9)/100))BED
 FROM
(
 SELECT T.OFNUM,OFDATE, A.MOIN_CODE, TAF_CODE TAFSILY_CODE,
        CUSTNAME,
        SUM((OFQTY * OFPRICE))+
        SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*
        (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TOTAL, 0)))/100))BED
--        SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOTAL, 0)))/100))BED
 FROM ACCCUST_T A, IDCUSTOMER_T IC, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND TAFSILY_YEAR = VCHYEAR
   AND AD_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.OFNUM = T.OFNUM
   AND D.PACK_TYPE <> 9
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND A.CUSTNO = T.CUSTNO
   AND IC.CUSTNO = T.CUSTNO
   AND A.MOIN_YEAR = VCHYEAR
   AND NVL(OFDLVPLACE, 0) = 0
--   AND G.GDS_CODE = Gds
 GROUP BY CUSTNAME, T.OFNUM, A.MOIN_CODE, TAF_CODE,OFDATE
),
(
 SELECT ADNUM2, SUM(NVL(ADVAL, 0))ADVAL
 FROM VALIDITY_T, OFFERTIT_T
 WHERE ADNUM3 = VCHYEAR
   AND OFDATE BETWEEN FRDATE AND TRDATE
   AND TAFSILY_YEAR = VCHYEAR
   AND ADNUM2 = OFNUM
 GROUP BY ADNUM2
)
WHERE ADNUM2(+) = OFNUM

)



UNION ALL
--SELECT 2 RowCount, NULL OFNUM , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
SELECT 2 RowCount, NVL(D.OFNUM,C.OFNUM) OFNUM ,NVL(D.OFDATE,C.OFDATE) OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
       ROUND(NVL(C.BED, 0) + NVL(D.BED, 0))BED,
       0 BES,
--       98103 MOIN_CODE , NULL TAFSILY_CODE, 2110 CENTER_CODE  --99/06/03
       98103 MOIN_CODE , NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
  FROM
(
 SELECT OFNUM,OFDATE,SUM(NVL(ADVAL, 0))BED
 FROM VALIDITY_T, OFFERTIT_T
 WHERE ADCODE IN (0, -1)
   AND OFDATE BETWEEN FRDATE AND TRDATE
   AND ADNUM2(+) = OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND ADNUM3(+) = TAFSILY_YEAR
   AND NVL(OFDLVPLACE, 0) = 0
   GROUP BY OFNUM,OFDATE
)C,
(
 SELECT T.OFNUM,OFDATE,SEC_TAF_CODE, (SUM((((OFQTY * OFPRICE) * NVL(ABATE, 0))/100)))BED
 FROM ACCCUST_T A, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND A.MOIN_YEAR = TAFSILY_YEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.PACK_TYPE <> 9
   AND A.CUSTNO = T.CUSTNO
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE, SEC_TAF_CODE
--   AND G.GDS_CODE = Gds
)D
WHERE D.OFNUM = C.OFNUM(+)

UNION ALL

SELECT 20 RowCount, T.OFNUM , OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
       ROUND(SUM((((OFQTY * OFPRICE) * NVL(CASH_ABATE, 0))/100)))BED,
       0 BES,
       98105 MOIN_CODE , NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
 FROM ACCCUST_T A, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND A.MOIN_YEAR = TAFSILY_YEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.PACK_TYPE <> 9
   AND A.CUSTNO = T.CUSTNO
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE, SEC_TAF_CODE
---------------------------------- BES -----------------------------------------

UNION ALL
 SELECT 3 RowCount,/* '???? ' || GRP_M_DESC,*/
        T.OFNUM ,OFDATE, NULL CUSTNAME,  GRP_M_DESC, NULL GDS_DESCF,
--        NULL OFNUM , NULL CUSTNAME,  GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ROUND(SUM(NVL(OFQTY, 0) * NVL(OFPRICE, 0))) BES,
        MOIN_CODE , NULL TAFSILY_CODE, NULL CENTER_CODE
 FROM OFFERTIT_T T, OFFERDTL_T D , GOODS G, GRP_M GR , ACCSALES_T A
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND A.MOIN_YEAR = VCHYEAR
   AND D.PACK_TYPE <> 9
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND GR.GRP_M_CODE = G.GRP_M_CODE
--   AND G.GDS_CODE = Gds
   AND D.GDS_CODE = A.GDS_CODE
   AND A.MOIN_YEAR = VCHYEAR
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY GR.GRP_M_CODE , GRP_M_DESC ,MOIN_CODE, T.OFNUM,OFDATE
UNION ALL
--SELECT 4 RowCount, NULL OFNUM ,  CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
SELECT 4 RowCount, NVL(D.OFNUM,C.OFNUM)OFNUM,NVL(D.OFDATE,C.OFDATE) OFDATE ,  CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
       0 BED,
       ROUND(NVL(C.BED, 0) + NVL(D.BED, 0)) BES,
       MOIN_CODE , TAFSILY_CODE, NULL CENTER_CODE
  FROM
(
 SELECT SUM(NVL(ADVAL, 0))BED, CUSTNO, OFNUM,OFDATE
 FROM VALIDITY_T, OFFERTIT_T
 WHERE ADCODE IN (0, -1)
   AND OFDATE BETWEEN FRDATE AND TRDATE
   AND ADNUM2(+) = OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND ADNUM3(+) = TAFSILY_YEAR
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY CUSTNO, OFNUM,OFDATE
)C,
(
 SELECT A.MOIN_CODE, TAF_CODE TAFSILY_CODE,
        CUSTNAME, IC.CUSTNO, T.OFNUM,OFDATE,
        (SUM((((OFQTY * OFPRICE) * NVL(ABATE, 0))/100)))BED
 FROM ACCCUST_T A, IDCUSTOMER_T IC, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.PACK_TYPE <> 9
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND A.CUSTNO = T.CUSTNO
   AND IC.CUSTNO = T.CUSTNO
--   AND G.GDS_CODE = Gds
   AND NVL(OFDLVPLACE, 0) = 0
   AND A.MOIN_YEAR = VCHYEAR
 GROUP BY CUSTNAME, IC.CUSTNO, A.MOIN_CODE, TAF_CODE, T.OFNUM,OFDATE
)D
WHERE D.CUSTNO = C.CUSTNO(+)
  AND D.OFNUM = C.OFNUM(+)
UNION ALL

 SELECT RowCount, OFNUM, OFDATE , CUSTNAME, GRP_M_DESC, GDS_DESCF,
        0 BED,
        ROUND(BES - ROUND((NVL(ADVAL, 0)*3)/100))BES,
        32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM
(
 SELECT 5 RowCount, T.OFNUM, OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ROUND(SUM(((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*
        (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TAX, 0)))/100)BES,
--        ROUND(SUM(((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TAX, 0)))/100)BES,
        32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND NVL(OFDLVPLACE, 0) = 0
   AND SECTAFSILY_CODE IS NOT NULL
--   AND G.GDS_CODE = Gds
 GROUP BY T.OFNUM,OFDATE
),
(
 SELECT ADNUM2, SUM(NVL(ADVAL, 0))ADVAL
 FROM VALIDITY_T, OFFERTIT_T
 WHERE ADNUM3 = VCHYEAR
   AND OFDATE BETWEEN FRDATE AND TRDATE
   AND TAFSILY_YEAR = VCHYEAR
   AND ADNUM2 = OFNUM
 GROUP BY ADNUM2
)
WHERE ADNUM2(+) = OFNUM

UNION ALL

 SELECT RowCount, OFNUM ,OFDATE, CUSTNAME, GRP_M_DESC, GDS_DESCF,
        0 BED,
        ROUND(BES - ROUND((NVL(ADVAL, 0)*6)/100))BES,
        MOIN_CODE , TAFSILY_CODE, CENTER_CODE
 FROM
(
 SELECT 6 RowCount, T.OFNUM ,OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ROUND((SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*
        (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))
                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) *NVL(AD_TOTAL, 0)))/100))))-
                                                  ROUND(SUM(((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*
                                                  (SIGN(NVL((SELECT DISTINCT GDS_TAX FROM FREETAXGOODS_T FT, GOODS GG
              WHERE FT.FT_YEAR = VCHYEAR
                AND FT.GDS_CODE = GG.GDS_CODE
                AND FT.GDS_CODE = D.GDS_CODE
                AND TO_NUMBER(TO_CHAR(FT_YEAR)||TO_CHAR(FT.OFNUM)) >= TO_NUMBER(TO_CHAR(CU_CODE)||TO_CHAR(D.OFNUM))
                                   UNION ALL
                   SELECT DISTINCT GDS_TAX FROM GOODS GG1
                   WHERE GDS_CODE NOT IN (SELECT GDS_CODE FROM FREETAXGOODS_T WHERE FT_YEAR = VCHYEAR)
                     AND GG1.GDS_CODE = D.GDS_CODE), 0)) * NVL(AD_TAX, 0))/100))BES,
--        ROUND((SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) *NVL(AD_TOTAL, 0)))/100))))-
--                                                  ROUND(SUM(((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TAX, 0))/100))BES,
        32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE
),
(
 SELECT ADNUM2, SUM(NVL(ADVAL, 0))ADVAL
 FROM VALIDITY_T, OFFERTIT_T
 WHERE ADNUM3 = VCHYEAR
   AND OFDATE BETWEEN FRDATE AND TRDATE
   AND TAFSILY_YEAR = VCHYEAR
   AND ADNUM2 = OFNUM
 GROUP BY ADNUM2
)
WHERE ADNUM2(+) = OFNUM

--------------------------------- PACK_TYPE = 9 --------------------------------

UNION ALL
SELECT 8 RowCount, D.OFNUM, D.OFDATE OFDATE ,  D.CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
--       ROUND(NVL(D.BED, 0)) + BES BED,  ---99/06/03
       ROUND(NVL(D.BED, 0)) BED,  ---99/06/03
       0 BES,
       D.MOIN_CODE , D.TAFSILY_CODE, NULL CENTER_CODE
  FROM
(
 SELECT A.MOIN_CODE, TAF_CODE TAFSILY_CODE,
        CUSTNAME, IC.CUSTNO, T.OFNUM,OFDATE,
        SUM((((OFQTY * OFPRICE) )))BED
 FROM ACCCUST_T A, IDCUSTOMER_T IC, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.PACK_TYPE = 9
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND A.CUSTNO = T.CUSTNO
   AND IC.CUSTNO = T.CUSTNO
--   AND G.GDS_CODE = Gds
   AND NVL(OFDLVPLACE, 0) = 0
   AND A.MOIN_YEAR = VCHYEAR
 GROUP BY CUSTNAME, IC.CUSTNO, A.MOIN_CODE, TAF_CODE, T.OFNUM,OFDATE
)D
/*,
(
 SELECT 4 RowCount, T.OFNUM ,OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ABS(ROUND((SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) *NVL(AD_TOTAL, 0)))/100))))-
        ROUND(SUM(((OFQTY * OFPRICE))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOTAL, 0))/100)))BES,
        32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.PACK_TYPE = 9
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE
)E
WHERE E.OFNUM = D.OFNUM
*/

union all

 SELECT 9 RowCount,
        T.OFNUM ,OFDATE, NULL CUSTNAME,  GRP_M_DESC, NULL GDS_DESCF,
--        NULL OFNUM , NULL CUSTNAME,  GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ROUND(SUM(NVL(OFQTY, 0) * NVL(OFPRICE, 0))) BES,
        MOIN_CODE , NULL TAFSILY_CODE, NULL CENTER_CODE
 FROM OFFERTIT_T T, OFFERDTL_T D , GOODS G, GRP_M GR , ACCSALES_T A
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.PACK_TYPE = 9
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND GR.GRP_M_CODE = G.GRP_M_CODE
--   AND G.GDS_CODE = Gds
   AND D.GDS_CODE = A.GDS_CODE
   AND A.MOIN_YEAR = VCHYEAR
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY GR.GRP_M_CODE , GRP_M_DESC ,MOIN_CODE, T.OFNUM,OFDATE

 UNION ALL

/*
 SELECT RowCount, OFNUM, OFDATE , CUSTNAME, GRP_M_DESC, GDS_DESCF,
        0 BED,
        ROUND(BES)BES,
        32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM
(
 SELECT 10 RowCount, T.OFNUM, OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ROUND(SUM(((OFQTY * OFPRICE) )*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TAX, 0)))/100)BES,
        32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.PACK_TYPE = 9
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND NVL(OFDLVPLACE, 0) = 0
   AND SECTAFSILY_CODE IS NOT NULL
--   AND G.GDS_CODE = Gds
 GROUP BY T.OFNUM,OFDATE
)

UNION ALL

 SELECT RowCount, OFNUM ,OFDATE, CUSTNAME, GRP_M_DESC, GDS_DESCF,
        0 BED,
        ROUND(BES)BES,
        MOIN_CODE , TAFSILY_CODE, CENTER_CODE
 FROM
(
 SELECT 11 RowCount, T.OFNUM ,OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ABS(ROUND((SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) *NVL(AD_TOTAL, 0)))/100))))-
        ROUND(SUM(((OFQTY * OFPRICE))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOLL, 0))/100)))BES,
        32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.PACK_TYPE = 9
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE
)
UNION ALL
*/
SELECT 12 RowCount, D.OFNUM OFNUM ,D.OFDATE OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
       ROUND( NVL(D.BED, 0))BED,
       0 BES,
       98106 MOIN_CODE , NULL TAFSILY_CODE, SEC_TAF_CODE CENTER_CODE
  FROM
(
 SELECT T.OFNUM,OFDATE,SEC_TAF_CODE, (SUM((((OFQTY * OFPRICE) * NVL(ABATE, 0))/100)))BED
 FROM ACCCUST_T A, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
--   AND D.PACK_TYPE <> 9
   AND D.PACK_TYPE = 9
   AND A.MOIN_YEAR = TAFSILY_YEAR
   AND A.CUSTNO = T.CUSTNO
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE, SEC_TAF_CODE
--   AND G.GDS_CODE = Gds
)D
UNION ALL
/*
 SELECT RowCount, OFNUM, OFDATE , CUSTNAME, GRP_M_DESC, GDS_DESCF,
        ROUND(BED)BED,
        0 BES,
        32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM
(
 SELECT 13 RowCount, T.OFNUM, OFDATE , NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BES,
        ROUND(SUM(((OFQTY * OFPRICE) )*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TAX, 0)))/100)BED,
        32226 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.PACK_TYPE = 9
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND NVL(OFDLVPLACE, 0) = 0
   AND SECTAFSILY_CODE IS NOT NULL
--   AND G.GDS_CODE = Gds
 GROUP BY T.OFNUM,OFDATE
)

UNION ALL

 SELECT RowCount, OFNUM ,OFDATE, CUSTNAME, GRP_M_DESC, GDS_DESCF,
        ROUND(BED)BED,
        0 BES,
        MOIN_CODE , TAFSILY_CODE, CENTER_CODE
 FROM
(
 SELECT 14 RowCount, T.OFNUM ,OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BES,
        ABS(ROUND((SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) *NVL(AD_TOTAL, 0)))/100))))-
        ROUND(SUM(((OFQTY * OFPRICE))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOLL, 0))/100)))BED,
        32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.PACK_TYPE = 9
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE
)
UNION ALL
*/
SELECT 15 RowCount, D.OFNUM, D.OFDATE OFDATE ,  D.CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
       0 BED,
--       ROUND(NVL(D.BED, 0)) + BES BES,  ---99/06/03
       ROUND(NVL(D.BED, 0)) BES,
       D.MOIN_CODE , D.TAFSILY_CODE, NULL CENTER_CODE
  FROM
(
 SELECT A.MOIN_CODE, TAF_CODE TAFSILY_CODE,
        CUSTNAME, IC.CUSTNO, T.OFNUM,OFDATE,
        SUM((((OFQTY * OFPRICE) )))BED
 FROM ACCCUST_T A, IDCUSTOMER_T IC, GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND D.PACK_TYPE = 9
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND A.CUSTNO = T.CUSTNO
   AND IC.CUSTNO = T.CUSTNO
--   AND G.GDS_CODE = Gds
   AND NVL(OFDLVPLACE, 0) = 0
   AND A.MOIN_YEAR = VCHYEAR
 GROUP BY CUSTNAME, IC.CUSTNO, A.MOIN_CODE, TAF_CODE, T.OFNUM,OFDATE
)D
/*,
(
 SELECT 4 RowCount, T.OFNUM ,OFDATE, NULL CUSTNAME, NULL GRP_M_DESC, NULL GDS_DESCF,
        0 BED,
        ABS(ROUND((SUM(((((OFQTY * OFPRICE) - (((OFQTY * OFPRICE)*NVL(ABATE, 0))/100))*(SIGN(NVL(GDS_TAX, 0)) *NVL(AD_TOTAL, 0)))/100))))-
        ROUND(SUM(((OFQTY * OFPRICE))*(SIGN(NVL(GDS_TAX, 0)) * NVL(AD_TOTAL, 0))/100)))BES,
        32225 MOIN_CODE , 19997 TAFSILY_CODE, NULL CENTER_CODE
 FROM GOODSINFO_T G, OFFERTIT_T T, OFFERDTL_T D, ADDEDTAX_T
 WHERE OFDATE BETWEEN FRDATE AND TRDATE
   AND D.PACK_TYPE = 9
   AND D.OFNUM = T.OFNUM
   AND TAFSILY_YEAR = VCHYEAR
   AND CU_CODE = TAFSILY_YEAR
   AND AD_YEAR = VCHYEAR
   AND G.GDS_CODE = D.GDS_CODE
   AND SECTAFSILY_CODE IS NOT NULL
   AND NVL(OFDLVPLACE, 0) = 0
 GROUP BY T.OFNUM,OFDATE
)E
WHERE E.OFNUM = D.OFNUM
*/
)
where nvl(bed, 0) + nvl(bes, 0) > 0
/*)
GROUP BY RowCount,GDS_DESCF,
       DECODE(ROWCOUNT,1,OFNUM,NULL),OFDATE,
       CUSTNAME,
       GRP_M_DESC,
       MOIN_CODE,TAFSILY_CODE,CENTER_CODE*/
ORDER BY OFDATE,RowCount;

  iFRDATE NUMBER;
  iYEAR NUMBER;
  FLAG BOOLEAN;
  ISEMPTY BOOLEAN;
  I NUMBER;
  VOCHDATE  NUMBER;
  VOCHNO NUMBER;

  ERRCODE   NUMBER;
  ERRTEXT   VARCHAR2(255);

  DOC_REC DOC_CUR%ROWTYPE;

BEGIN
  DELETE FROM ERRTBL;

  FLAG:= TRUE;
  ISEMPTY:= TRUE;
  I:= 0;
  VOCHDATE := 0;

  FOR DOC_REC IN DOC_CUR LOOP
      IF (DOC_REC.RowCount IN (2,7)) AND (NVL(TO_NUMBER(DOC_REC.MOIN_CODE),0) =0 ) THEN
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('براي کالاي '|| DOC_REC.GDS_DESCF || ' حساب معين تعريف نشده است', 1));
      END IF;

  END LOOP;


      VOCHNO := VCHNO;
    FOR DOC_REC IN DOC_CUR LOOP

      if VOCHDATE = 0 then
        VOCHDATE := DOC_REC.OFDATE;
      end if;

      if VOCHDATE <> DOC_REC.OFDATE then
        I:=0;
        VOCHDATE := DOC_REC.OFDATE;
        VOCHNO := VOCHNO+1;
      end if;

      I:= I + 1;
        if I = 1 THEN
          INSERT INTO SALEVCHT_T
                (VCHYEAR, VCHNO, VCHTYP, VCHDTE, VCHDESC, VCHSTAT)
          VALUES
                (VCHYEAR, VOCHNO, 1, VOCHDATE, 'سند '||' '|| DECODE(TO_NUMBER(SUBSTR(FRDATE,5,2)),
                                                                          1,'فروش فروردين ماه',
                                                                          2,'فروش ارديبهشت ماه',
                                                                          3,'فروش خرداد ماه',
                                                                          4,'فروش تير ماه',
                                                                          5,'فروش مرداد ماه',
                                                                          6,'فروش شهريور ماه',
                                                                          7,'فروش مهر ماه',
                                                                          8,'فروش آبان ماه',
                                                                          9,'فروش آذز ماه',
                                                                          10,'فروش دي ماه',
                                                                          11,'فروش بهمن ماه',
                                                                          12,'فروش اسفند ماه'),1);

        END IF;

          INSERT INTO SALEVCHR_T
            (VCHYEAR, VCHNO, VSEQ, VDESC,
             VDEBIT, VCREDIT,
             MOIN_YEAR, MOIN_CODE, TAFSILY_CODE, SEC_TAF_CODE)
          VALUES
            (VCHYEAR, VOCHNO, I, DECODE(DOC_REC.RowCount,
                                       1, DOC_REC.CUSTNAME || ' بابت فاکتور شماره '||DOC_REC.OFNUM,
                                       2, 'هزينه تخفيفات محصولات شرکت',
                                       3, 'فروش ' || DOC_REC.GRP_M_DESC,
                                       4, DOC_REC.CUSTNAME || ' بابت تخفيفات ',
                                       5, 'عوارض ارزش افزوده',
                                       6, 'ماليات ارزش افزوده',
                                       8, DOC_REC.CUSTNAME || ' بابت تخفيفات کالايي '|| ' بابت فاکتور شماره '||DOC_REC.OFNUM,
                                       9, 'فروش ' || DOC_REC.GRP_M_DESC,
                                       10, 'عوارض ارزش افزوده(تخفيفات کالايي)',
                                       11, 'ماليات ارزش افزوده (تخفيفات کالايي)',
                                       12, 'تخفيفات کالايي' || ' بابت فاکتور شماره '||DOC_REC.OFNUM,
                                       13, 'عوارض ارزش افزوده(تخفيفات کالايي)',
                                       14, 'ماليات ارزش افزوده (تخفيفات کالايي)',
                                       15, DOC_REC.CUSTNAME || ' بابت تخفيفات کالايي ' || ' بابت فاکتور شماره '||DOC_REC.OFNUM),
            NVL(DOC_REC.BED,0), NVL(DOC_REC.BES,0),
            SUBSTR(FRDATE,1,4), DOC_REC.MOIN_CODE,DOC_REC.TAFSILY_CODE, DOC_REC.CENTER_CODE);
    END LOOP;
    DELETE FROM SALEVCHR_T
    WHERE NVL(VDEBIT, 0) = 0
      AND NVL(VCREDIT, 0) = 0;

--  ELSIF ISEMPTY THEN
--    RETURN 3;
--  END IF;
  SALE_RETURNVOCH(FRDATE, TRDATE, VOCHNO + 1, VCHYEAR);
  BALANCEVOCH(VCHYEAR);
  RETURN 0;
END;


PROCEDURE BALANCEVOCH(FYEAR NUMBER) IS

  CURSOR ALLVOCH_CUR IS
    SELECT VCHNO, SUM(NVL(VDEBIT, 0))VDEBIT, SUM(NVL(VCREDIT, 0))VCREDIT
    FROM SALEVCHR_T
    WHERE VCHYEAR = FYEAR
    GROUP BY VCHNO
    HAVING SUM(NVL(VDEBIT, 0)) <> SUM(NVL(VCREDIT, 0));
  ALLVOCH_REC ALLVOCH_CUR%ROWTYPE;
BEGIN
  FOR ALLVOCH_REC IN ALLVOCH_CUR LOOP
      IF ABS(ALLVOCH_REC.VDEBIT - ALLVOCH_REC.VCREDIT) < 10 THEN
        IF  ALLVOCH_REC.VDEBIT > ALLVOCH_REC.VCREDIT THEN
          UPDATE SALEVCHR_T
          SET VDEBIT = VDEBIT - (ALLVOCH_REC.VDEBIT - ALLVOCH_REC.VCREDIT)
          WHERE VCHYEAR = FYEAR
            AND VCHNO = ALLVOCH_REC.VCHNO
            AND VSEQ =  (SELECT MIN(VSEQ) FROM SALEVCHR_T
                         WHERE VCHYEAR = FYEAR
                           AND VCHNO = ALLVOCH_REC.VCHNO
                           AND NVL(VDEBIT, 0) > 0);
        END IF;
        IF  ALLVOCH_REC.VCREDIT > ALLVOCH_REC.VDEBIT THEN
          UPDATE SALEVCHR_T
          SET VCREDIT = VCREDIT - (ALLVOCH_REC.VCREDIT - ALLVOCH_REC.VDEBIT)
          WHERE VCHYEAR = FYEAR
            AND VCHNO = ALLVOCH_REC.VCHNO
            AND VSEQ =  (SELECT MIN(VSEQ) FROM SALEVCHR_T
                         WHERE VCHYEAR = FYEAR
                           AND VCHNO = ALLVOCH_REC.VCHNO
                           AND NVL(VCREDIT, 0) > 0);
        END IF;
      END IF;
  END LOOP;
END BALANCEVOCH;







FUNCTION REJ_INVOCH(FRDATE VARCHAR2, VCHNO NUMBER, VCHYEAR NUMBER) RETURN NUMBER IS
  CURSOR DOC_CURSORERR(FDATE NUMBER, FYEAR NUMBER) IS
-- == CUSTOMER ==================================================
    SELECT 1 DESCRIPTION, 0 BED, SUM((NVL(TOTLPRICE, 0) - NVL(KASRVAL, 0) + NVL(EZAFEHVAL, 0))) BES, ID.MOIN_CODE,
           ID.TAF_CODE, TO_CHAR(INF.CUSTNO) FCODE, 1 IND, INF.itmno FITMNO
    FROM INFACT_V INF,
         ACCCUST_T ID
    WHERE INF.CUSTNO  = ID.CUSTNO(+)
      AND INF.ITMSTAT = 2
      AND INF.ITMKIND = 2
      AND INF.ITMTYP  = 1
      AND ID.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY ID.MOIN_CODE, ID.TAF_CODE, ID.CUSTNO, INF.itmno
    UNION ALL
    SELECT 1 DESCRIPTION, 0 BED, SUM((NVL(TOTLPRICE, 0) - NVL(KASRVAL, 0) + NVL(EZAFEHVAL, 0))) BES, ID.MOIN_CODE,
           ID.TAF_CODE, TO_CHAR(INF.CUSTNO) FCODE, 1 IND, INF.itmno FITMNO
    FROM INFACT_V INF,
         ACCCUST_T ID
    WHERE INF.CUSTNO  = ID.CUSTNO(+)
      AND INF.ITMSTAT = 2
      AND INF.ITMKIND = 2
      AND INF.ITMTYP  = 2
      AND ID.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY ID.MOIN_CODE, ID.TAF_CODE, ID.CUSTNO, INF.itmno
-- === KASR ==========================================================
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, AC.TAF_CODE, TO_CHAR(V.ADCODE) FCODE, 2 IND, I.itmno FITMNO
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 1
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, AC.TAF_CODE, V.ADCODE, I.itmno
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, AC.TAF_CODE, TO_CHAR(V.ADCODE) FCODE, 2 IND, I.itmno FITMNO
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, AC.TAF_CODE, V.ADCODE, I.itmno
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, AC.TAF_CODE, TO_CHAR(V.ADCODE) FCODE, 2 IND, I.INVSRL FITMNO
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, AC.TAF_CODE, V.ADCODE, I.INVSRL
-- === EZAFEH ==========================================================
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, AC.TAF_CODE, TO_CHAR(V.ADCODE) FCODE, 3 IND, I.itmno FITMNO
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 1
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE = FDATE
    GROUP BY AC.MOIN_CODE, AC.TAF_CODE, V.ADCODE, I.itmno
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, AC.TAF_CODE, TO_CHAR(V.ADCODE) FCODE, 3 IND, I.itmno FITMNO
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND|| I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE = FDATE
    GROUP BY AC.MOIN_CODE, AC.TAF_CODE, V.ADCODE, I.itmno
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, AC.TAF_CODE, TO_CHAR(V.ADCODE) FCODE, 3 IND, I.INVSRL FITMNO
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, AC.TAF_CODE, V.ADCODE, I.INVSRL
 -- === GOODS ==========================================================
    UNION ALL
    SELECT 4 DESCRIPTION, SUM(TOTLPRICE) BED, 0 BES, A.MOIN_CODE, A.TAF_CODE, INF.GDS_CODE FCODE, 4 IND, INF.itmno FITMNO
    FROM INFACT_V INF,
         ACCSALES_T A
    WHERE INF.GDS_CODE = A.GDS_CODE(+)
      AND INF.ITMSTAT  = 2
      AND INF.ITMTYP   = 1
      AND INF.ITMKIND  = 1
      AND A.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY A.MOIN_CODE, A.TAF_CODE, INF.GDS_CODE, INF.itmno
    UNION ALL
    SELECT 4 DESCRIPTION, SUM(TOTLPRICE) BED, 0 BES, A.MOIN_CODE, A.TAF_CODE, INF.GDS_CODE FCODE, 4 IND, INF.itmno FITMNO
    FROM INFACT_V INF,
         ACCSALES_T A
    WHERE INF.GDS_CODE = A.GDS_CODE(+)
      AND INF.ITMSTAT  = 2
      AND INF.ITMTYP   = 2
      AND INF.ITMKIND  = 2
      AND A.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY A.MOIN_CODE, A.TAF_CODE, INF.GDS_CODE, INF.itmno;
  CURSOR DOC_CURSOR(FDATE NUMBER, FYEAR NUMBER) IS
-- == CUSTOMER ==================================================
    SELECT 1 DESCRIPTION, 0 BED, SUM(NVL(TOTLPRICE, 0)) - NVL(KASRVAL, 0) + NVL(EZAFEHVAL, 0) BES, ID.MOIN_CODE,
           ID.TAF_CODE, DECODE(INF.SECTAFSILY_CODE, 0, ID.SEC_TAF_CODE, INF.SECTAFSILY_CODE) SEC_TAF_CODE, 1 IND,
           INF.itmno FITMNO, INF.OFNUM FOFNUM
    FROM INFACT_V INF,
         ACCCUST_T ID
    WHERE INF.CUSTNO  = ID.CUSTNO(+)
      AND INF.ITMSTAT = 2
      AND INF.ITMKIND = 2
      AND INF.ITMTYP  = 1
      AND ID.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY ID.MOIN_CODE, ID.TAF_CODE, NVL(KASRVAL, 0), NVL(EZAFEHVAL, 0),
             DECODE(INF.SECTAFSILY_CODE, 0, ID.SEC_TAF_CODE, INF.SECTAFSILY_CODE),
             INF.itmno, INF.OFNUM
    UNION ALL
    SELECT 1 DESCRIPTION, 0 BED, SUM(NVL(TOTLPRICE, 0)) - NVL(KASRVAL, 0) + NVL(EZAFEHVAL, 0) BES, ID.MOIN_CODE,
           ID.TAF_CODE, DECODE(INF.SECTAFSILY_CODE, 0, ID.SEC_TAF_CODE, INF.SECTAFSILY_CODE) SEC_TAF_CODE,1 IND,
           INF.itmno FITMNO, INF.OFNUM FOFNUM
    FROM INFACT_V INF,
         ACCCUST_T ID
    WHERE INF.CUSTNO  = ID.CUSTNO(+)
      AND INF.ITMSTAT = 2
      AND INF.ITMKIND = 2
      AND INF.ITMTYP  = 2
      AND ID.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY ID.MOIN_CODE, ID.TAF_CODE, NVL(KASRVAL, 0), NVL(EZAFEHVAL, 0),
             DECODE(INF.SECTAFSILY_CODE, 0, ID.SEC_TAF_CODE, INF.SECTAFSILY_CODE),
             INF.itmno, INF.OFNUM
-- === KASR ==========================================================
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, NULL TAF_CODE, NULL SEC_TAF_CODE,2 IND,
           I.itmno FITMNO, I.OFNUM FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND  || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 1
      AND A.VCH_TYPE = 0
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 2 IND, I.itmno FITMNO, I.OFNUM FOFNUM
      FROM  VALIDITY_T V,
           ADDSUB_T A,
           ACCADDSUB_T AC,
           ITEMFACT_T I,
           (SELECT OFNUM, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
              FROM IDCUSTOMER_T CU, OFFERTIT_T OFT, ACCCUST_T AC
             WHERE AC.MOIN_YEAR = FYEAR
               AND CU.CUSTNO = OFT.CUSTNO
               AND CU.CUSTNO = AC.CUSTNO) T
    WHERE  V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND  V.ADCODE  = A.ADCODE(+)
      AND  V.ADCODE  = AC.ADCODE(+)
      AND  A.ADTYPE  = 2
      AND  I.ITMSTAT = 2
      AND  I.ITMKIND = 2
      AND  I.ITMTYP  = 1
      AND  A.VCH_TYPE = 1
      AND  (I.CNTCODE IS NULL AND I.OFNUM IS NOT NULL)
      AND  AC.MOIN_YEAR(+) = FYEAR
      AND  I.ITMDTE  = FDATE
      AND  I.OFNUM = T.OFNUM
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 2 IND, I.itmno FITMNO, I.OFNUM FOFNUM
      FROM  VALIDITY_T V,
           ADDSUB_T A,
           ACCADDSUB_T AC,
           ITEMFACT_T I,
           (SELECT CNTCODE, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
              FROM IDCUSTOMER_T CU, IDCONTACT_T CO, ACCCUST_T AC
             WHERE AC.MOIN_YEAR = FYEAR
               AND CU.CUSTNO = CO.CUSTNO
               AND CU.CUSTNO = AC.CUSTNO) T
    WHERE  V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND  V.ADCODE  = A.ADCODE(+)
      AND  V.ADCODE  = AC.ADCODE(+)
      AND  A.ADTYPE  = 2
      AND  I.ITMSTAT = 2
      AND  I.ITMKIND = 2
      AND  I.ITMTYP  = 1
      AND  A.VCH_TYPE = 1
      AND  (I.CNTCODE IS NOT NULL AND I.OFNUM IS NULL)
      AND  AC.MOIN_YEAR(+) = FYEAR
      AND  I.ITMDTE  = FDATE
      AND  I.CNTCODE = T.CNTCODE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, NULL TAF_CODE, NULL SEC_TAF_CODE, 2 IND,
           I.itmno FITMNO, I.OFNUM FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND A.VCH_TYPE = 0
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
           T.SECTAFSILY_CODE SEC_TAF_CODE, 2 IND, I.itmno FITMNO, I.OFNUM FOFNUM
      FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I,
        (SELECT OFNUM, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
           FROM IDCUSTOMER_T CU, OFFERTIT_T OFT, ACCCUST_T AC
          WHERE AC.MOIN_YEAR = FYEAR
            AND CU.CUSTNO = OFT.CUSTNO
            AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND A.VCH_TYPE = 1
      AND (I.CNTCODE IS NULL AND I.OFNUM IS NOT NULL)
      AND I.OFNUM = T.OFNUM
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
           T.SECTAFSILY_CODE SEC_TAF_CODE, 2 IND, I.itmno FITMNO, I.OFNUM FOFNUM
      FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I,
         (SELECT CNTCODE, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
            FROM IDCUSTOMER_T CU, IDCONTACT_T CO, ACCCUST_T AC
           WHERE AC.MOIN_YEAR = FYEAR
             AND CU.CUSTNO = CO.CUSTNO
             AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND A.VCH_TYPE = 1
      AND  (I.CNTCODE IS NOT NULL AND I.OFNUM IS NULL)
      AND  I.CNTCODE = T.CNTCODE
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, NULL TAF_CODE, NULL SEC_TAF_CODE, 2 IND,
           I.INVSRL FITMNO, I.ORDNO FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND A.VCH_TYPE = 0
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, I.INVSRL, I.ORDNO
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 2 IND, I.INVSRL FITMNO, I.CNTCODE FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I,
        (SELECT CNTCODE, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
           FROM IDCUSTOMER_T CU, IDCONTACT_T CO, ACCCUST_T AC
          WHERE AC.MOIN_YEAR = FYEAR
            AND CU.CUSTNO = CO.CUSTNO
            AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND A.VCH_TYPE = 1
      AND (I.CNTCODE IS NOT NULL AND I.ORDNO IS NULL)
      AND I.CNTCODE = T.CNTCODE
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.INVSRL, I.CNTCODE
    UNION ALL
    SELECT 2 DESCRIPTION, 0 BED, SUM(V.ADVAL) BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 2 IND, I.INVSRL FITMNO, I.ORDNO FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I,
        (SELECT ORDNO, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
           FROM IDCUSTOMER_T CU, ORDERTIT_T ORD, PROFORMAT_T PRF, ACCCUST_T AC
          WHERE AC.MOIN_YEAR = FYEAR
            AND CU.CUSTNO = PRF.CUSTNO
            AND ORD.PRFNUM = PRF.PRFNUM
            AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 2
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND A.VCH_TYPE = 1
      AND (I.CNTCODE IS NULL AND I.ORDNO IS NOT NULL)
      AND I.ORDNO = T.ORDNO
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.INVSRL, I.ORDNO
-- === EZAFEH ==========================================================
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, NULL TAF_CODE, NULL SEC_TAF_CODE, 3 IND,
           I.itmno FITMNO, I.OFNUM FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 1
      AND A.VCH_TYPE = 0
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE = FDATE
    GROUP BY AC.MOIN_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 3 IND, I.itmno FITMNO, I.OFNUM FOFNUM
      FROM  VALIDITY_T V,
           ADDSUB_T A,
           ACCADDSUB_T AC,
           ITEMFACT_T I,
           (SELECT OFNUM, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
              FROM IDCUSTOMER_T CU, OFFERTIT_T OFT, ACCCUST_T AC
             WHERE AC.MOIN_YEAR = FYEAR
               AND CU.CUSTNO = OFT.CUSTNO
               AND CU.CUSTNO = AC.CUSTNO) T
    WHERE  V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND  V.ADCODE  = A.ADCODE(+)
      AND  V.ADCODE  = AC.ADCODE(+)
      AND  A.ADTYPE  = 1
      AND  I.ITMSTAT = 2
      AND  I.ITMKIND = 2
      AND  I.ITMTYP  = 1
      AND  A.VCH_TYPE = 1
      AND  (I.CNTCODE IS NULL AND I.OFNUM IS NOT NULL)
      AND  AC.MOIN_YEAR(+) = FYEAR
      AND  I.ITMDTE  = FDATE
      AND  I.OFNUM = T.OFNUM
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 3 IND, I.itmno FITMNO, I.CNTCODE FOFNUM
      FROM  VALIDITY_T V,
           ADDSUB_T A,
           ACCADDSUB_T AC,
           ITEMFACT_T I,
           (SELECT CNTCODE, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
              FROM IDCUSTOMER_T CU, IDCONTACT_T CO, ACCCUST_T AC
             WHERE AC.MOIN_YEAR = FYEAR
               AND CU.CUSTNO = CO.CUSTNO
               AND CU.CUSTNO = AC.CUSTNO) T
    WHERE  V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND  V.ADCODE  = A.ADCODE(+)
      AND  V.ADCODE  = AC.ADCODE(+)
      AND  A.ADTYPE  = 1
      AND  I.ITMSTAT = 2
      AND  I.ITMKIND = 2
      AND  I.ITMTYP  = 1
      AND  A.VCH_TYPE = 1
      AND  (I.CNTCODE IS NOT NULL AND I.OFNUM IS NULL)
      AND  AC.MOIN_YEAR(+) = FYEAR
      AND  I.ITMDTE  = FDATE
      AND  I.CNTCODE = T.CNTCODE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.CNTCODE
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, NULL TAF_CODE, NULL SEC_TAF_CODE, 3 IND,
           I.itmno FITMNO, I.OFNUM FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND A.VCH_TYPE = 0
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE = FDATE
    GROUP BY AC.MOIN_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
           T.SECTAFSILY_CODE SEC_TAF_CODE, 3 IND, I.itmno FITMNO, I.OFNUM FOFNUM
      FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I,
        (SELECT OFNUM, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
           FROM IDCUSTOMER_T CU, OFFERTIT_T OFT, ACCCUST_T AC
          WHERE AC.MOIN_YEAR = FYEAR
            AND CU.CUSTNO = OFT.CUSTNO
            AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND  A.VCH_TYPE = 1
      AND (I.CNTCODE IS NULL AND I.OFNUM IS NOT NULL)
      AND I.OFNUM = T.OFNUM
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.OFNUM
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
           T.SECTAFSILY_CODE SEC_TAF_CODE, 3 IND, I.itmno FITMNO, I.CNTCODE FOFNUM
      FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         ITEMFACT_T I,
         (SELECT CNTCODE, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
            FROM IDCUSTOMER_T CU, IDCONTACT_T CO, ACCCUST_T AC
           WHERE AC.MOIN_YEAR = FYEAR
             AND CU.CUSTNO = CO.CUSTNO
             AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM3  = (I.ITMKIND || I.ITMNO)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.ITMSTAT = 2
      AND I.ITMKIND = 2
      AND I.ITMTYP  = 2
      AND A.VCH_TYPE = 1
      AND  (I.CNTCODE IS NOT NULL AND I.OFNUM IS NULL)
      AND  I.CNTCODE = T.CNTCODE
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.ITMDTE  = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.itmno, I.CNTCODE
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, NULL TAF_CODE, NULL SEC_TAF_CODE, 3 IND,
           I.INVSRL FITMNO, I.ORDNO FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND A.VCH_TYPE = 0
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, I.INVSRL, I.ORDNO
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 3 IND, I.INVSRL FITMNO, I.CNTCODE FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I,
        (SELECT CNTCODE, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
           FROM IDCUSTOMER_T CU, IDCONTACT_T CO, ACCCUST_T AC
          WHERE AC.MOIN_YEAR = FYEAR
            AND CU.CUSTNO = CO.CUSTNO
            AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM4  = (I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND A.VCH_TYPE = 1
      AND (I.CNTCODE IS NOT NULL AND I.ORDNO IS NULL)
      AND I.CNTCODE = T.CNTCODE
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.INVSRL, I.CNTCODE
    UNION ALL
    SELECT 3 DESCRIPTION, SUM(V.ADVAL) BED, 0 BES, AC.MOIN_CODE, T.TAFSILY_CODE TAF_CODE,
            T.SECTAFSILY_CODE SEC_TAF_CODE, 3 IND, I.INVSRL FITMNO, I.ORDNO FOFNUM
    FROM VALIDITY_T V,
         ADDSUB_T A,
         ACCADDSUB_T AC,
         INVOICEPRDT_T I,
        (SELECT ORDNO, TAFSILY_CODE, DECODE(SECTAFSILY_CODE, NULL, SEC_TAF_CODE, SECTAFSILY_CODE) SECTAFSILY_CODE
           FROM IDCUSTOMER_T CU, ORDERTIT_T ORD, PROFORMAT_T PRF, ACCCUST_T AC
          WHERE AC.MOIN_YEAR = FYEAR
            AND CU.CUSTNO = PRF.CUSTNO
            AND ORD.PRFNUM = PRF.PRFNUM
            AND CU.CUSTNO = AC.CUSTNO) T
    WHERE V.ADNUM4  = (I.INVKIND || I.INVSRL)
      AND V.ADCODE  = A.ADCODE(+)
      AND V.ADCODE  = AC.ADCODE(+)
      AND A.ADTYPE  = 1
      AND I.INVSTAT = 2
      AND I.INVKIND = 2
      AND A.VCH_TYPE = 1
      AND (I.CNTCODE IS NULL AND I.ORDNO IS NOT NULL)
      AND I.ORDNO = T.ORDNO
      AND AC.MOIN_YEAR(+) = FYEAR
      AND I.INVFDTE = FDATE
    GROUP BY AC.MOIN_CODE, T.TAFSILY_CODE, T.SECTAFSILY_CODE, I.INVSRL, I.ORDNO
 -- === GOODS ==========================================================
    UNION ALL
    SELECT 4 DESCRIPTION, SUM(TOTLPRICE) BED, 0 BES, A.MOIN_CODE, A.TAF_CODE, NULL SEC_TAF_CODE, 4 IND,
          INF.itmno FITMNO, INF.OFNUM FOFNUM
    FROM INFACT_V INF,
         ACCSALES_T A
    WHERE INF.GDS_CODE = A.GDS_CODE(+)
      AND INF.ITMSTAT  = 2
      AND INF.ITMTYP   = 1
      AND INF.ITMKIND  = 1
      AND A.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY A.MOIN_CODE, A.TAF_CODE, INF.itmno, INF.OFNUM
    UNION ALL
    SELECT 4 DESCRIPTION, SUM(TOTLPRICE) BED, 0 BES, A.MOIN_CODE, A.TAF_CODE, NULL SEC_TAF_CODE, 4 IND,
          INF.itmno FITMNO, INF.OFNUM FOFNUM
    FROM INFACT_V INF,
         ACCSALES_T A
    WHERE INF.GDS_CODE = A.GDS_CODE(+)
      AND INF.ITMSTAT  = 2
      AND INF.ITMTYP   = 2
      AND INF.ITMKIND  = 2
      AND A.MOIN_YEAR(+) = FYEAR
      AND INF.ITMDTE = FDATE
    GROUP BY A.MOIN_CODE, A.TAF_CODE, INF.itmno, INF.OFNUM;
  iFRDATE NUMBER;
  iYEAR NUMBER;
  FLAG BOOLEAN;
  ISEMPTY BOOLEAN;
  I NUMBER;
BEGIN
  DELETE FROM ERRTBL;
  iFRDATE:= TO_NUMBER(FRDATE);
  iYEAR:= TO_NUMBER(VCHYEAR);

  FLAG:= TRUE;
  ISEMPTY:= TRUE;
  I:= 0;

  FOR C1 IN DOC_CURSORERR(iFRDATE, iYEAR) LOOP
    ISEMPTY:= FALSE;
    IF NVL(C1.MOIN_CODE, 0) = 0 THEN
      FLAG:= FALSE;

      IF C1.IND = 1 THEN -- CUSTOMER
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('E?C? ?I ?OE?? '|| C1.FCODE || ' ??CE E???? ?OI? C?E', 1));
      ELSIF C1.IND = 2 THEN -- KASR
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('E?C? ?I ??? ' || C1.FCODE || ' ??CE E???? ?OI? C?E', 1));
      ELSIF C1.IND = 3 THEN -- EZAFEH
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('E?C? ?I C?C?? ' || C1.FCODE || ' ??CE E???? ?OI? C?E', 1));
      ELSIF C1.IND = 4 THEN -- GOODS
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('E?C? ?I ?C?C '|| C1.FCODE || ' ??CE E???? ?OI? C?E', 1));
      ELSIF C1.IND = 5 THEN --SERVICE
        INSERT INTO ERRTBL
          (ERRSTR)
        VALUES
          (MBPACKAGE.ST2DB('E?C? ?I II?E ' || C1.FCODE || ' ??CE E???? ?OI? C?E', 1));
      END IF;
    END IF;
  END LOOP;

  IF NOT ISEMPTY THEN
    IF FLAG = FALSE THEN
      RETURN 2;
    END IF;

    INSERT INTO SALEVCHT_T
      (VCHYEAR, VCHNO, VCHTYP, VCHDTE, VCHDESC, VCHSTAT)
    VALUES
      (iYEAR, VCHNO, 1, TO_CHAR(iFRDATE), MBPACKAGE.ST2DB('??I ??CEIC?? E??OE? ??E?? E? EC??I ' || FORMAT_DATE(TO_CHAR(iFRDATE)), 1), 1);

     FOR C2 IN DOC_CURSOR(iFRDATE, iYEAR) LOOP
      I:= I + 1;
      IF C2.BED <> 0 AND C2.BES <> 0 THEN
        IF C2.IND IN (1, 11, 111) THEN -- CUSTOMER
          INSERT INTO SALEVCHR_T
            (VCHYEAR, VCHNO, VSEQ, VDESC, VDEBIT, VCREDIT, MOIN_YEAR, MOIN_CODE, TAFSILY_CODE, SEC_TAF_CODE)
          VALUES
            (VCHYEAR, VCHNO, I, GET_VOCHDESC(C2.DESCRIPTION, FRDATE, C2.FITMNO, C2.FOFNUM), C2.BED, C2.BES, VCHYEAR, C2.MOIN_CODE, C2.TAF_CODE, C2.SEC_TAF_CODE);
        ELSIF C2.IND IN (2, 3, 4, 5) THEN -- OTHERS
          INSERT INTO SALEVCHR_T
            (VCHYEAR, VCHNO, VSEQ, VDESC, VDEBIT, VCREDIT, MOIN_YEAR, MOIN_CODE, TAFSILY_CODE, SEC_TAF_CODE)
          VALUES
            (VCHYEAR, VCHNO, I, GET_VOCHDESC(C2.DESCRIPTION, FRDATE, C2.FITMNO, C2.FOFNUM), C2.BED, C2.BES, VCHYEAR, C2.MOIN_CODE, C2.TAF_CODE, NULL);
        END IF;
      END IF;
    END LOOP;
  END IF;

  RETURN 0;

  EXCEPTION
    WHEN OTHERS THEN
      RETURN 1;
      RAISE;
END;

END FACT_PROCESS;
/
